计算机的许多硬件，如主板、硬盘和电源等，都安放与固定在机箱当中。机箱是一个相对封闭的空间，箱体一般由钢和铝等金属制成[15]（其他材料亦可用，但不多见），同时设有许多通风口，以促进箱内空气流动，防止内部温度过高。机箱的颜色、大小乃至形状等可根据内部硬件之实际需要以及个人的喜好而变。

目前市场比较普遍的机箱规格有ATX規格和Micro ATX等2种，另外以ITX標準小型機箱也在流行趨勢中。

主機板

一块微星公司的Z97主機板，上有針對遊戲性散熱和裝飾美觀的設計
主条目：主機板
主機板是計算機的主要電路板（PCB）。計算機的其他硬件一般直接插入到主機板中来交换信息。主板通常由晶片组、BIOS、印表埠、各種周邊裝置連接埠（如網路埠、Audio、USB）、PS/2键盤/鼠標接口和PCIe/PCI擴展插槽等组成。有時為了减小主板尺寸，節省成本也通過插到主板的子板来擴充更多擴展槽。現時主流的主機板規格有ATX規格、MicroATX、Mini-ITX。

中央處理器

2019年的AMD Ryzen5-3600中央處理器
主条目：中央處理器
中央處理器，又稱中央處理單元，簡稱處理器，是整個計算機系統中最重要的部件之一，控制整個電腦主要的算術邏輯單元（arithmetic logic unit，簡稱ALU），使得電腦程式和作業系統可在它上面執行，其性能直接影響計算機系統的工作效率。不同類型的中央處理器安裝到主機板上不同類型的插座中（英特爾的處理器插座包括LGA 1366、LGA 1150、LGA 1151等，AMD則使用Socket FM2+、Socket AM1 、Socket AM3+ 、Socket AM4等）。

大多數IBM PC兼容机/標準x86 PC使用x86-架構的處理器，他們主要由Intel和AMD兩家公司生産，此外威盛電子或者全美達也有參與中央處理器的生產（但是威盛電子已經退出PC x86處理器與PC晶片組業務）。與IBM PC兼容机不同，在2006年之前蘋果電腦所使用的處理器一直是IBM PowerPC RISC，之後的蘋果電腦開始轉而採用英特尔x86處理器，2020年蘋果推出自家中央處理器M1，蘋果採用ARM架構並且CPU+GPU+RAM做在同一顆晶片。

散熱器
主条目：散热器
散熱器，有被动式散热、下压式风冷、塔式风冷、一體式水冷、分体式水冷

主記憶體

海盜船牌 32GB DDR4 SDRAM模块附有裝飾的LED燈條，增加主機美觀度
主条目：隨機存取記憶體
主記憶體即RAM，亦时常被称为「内存」[註 1]，屬於電腦記憶體的一種，是计算机的“短期临时存储器”，用於存放當前正在執行的程式以及目前所需的數據等。它的读写速度远高於硬碟機或光碟機之类的外部存储设备，但当系统关闭或無電源供應的时候，其中的資料會丟失。

在個人電腦中，隨機存取記憶體的規格包括DDR、DDR2、DDR3、DDR4及DDR5，在顯示卡上則還有GDDR4及GDDR5。而隨機存取記憶體隨著系統支援，可利用雙通道或者三通道技術讓頻寬變大，進一步加快資料傳輸速率。記憶體容量的大小與性能是影響整個計算機系統運行效率的重要因素之一。

電源供應器

一個電源供應器
主条目：電源供應器
電源供應器属外设之一，作用为将家用交流电源轉換为个人电脑硬件所需的直流电[16]。电源供应器的功率应满足电脑各部件的需要，否则或会影响到整个系统的性能。许多老旧电脑出现的问题都归咎于老化或有缺陷的電源供應器運作時會出現過熱現象或無法提供穩定電流和電壓等，此外電源供應器有分全模組化、半模組化、非模組化。

顯示卡

PCI-E接口nVIDIA GeForce RTX3090顯示卡
主条目：顯示卡
獨立顯示卡，它负责處理CPU傳送來的圖像指令和数据，並將處理后的結果輸出至顯示器，以最終形成圖像。隨時代發展，GPU的運作性能亦取得了長足的提昇。

目前主要的GPU生産廠商包括Nvidia和AMD和Intel等。

此外有一種將顯示核心整合在處理器此稱為内顯，因為該芯片集成在CPU中，所以发热量明顯的要小於獨立顯卡,但效能比獨立顯卡還要弱，一般都是文書做使用。AMD推出的APU上，顯示核心被内置到了CPU中。Intel生產GPU主要是用在自家CPU，顯示卡的產品規模不如前兩家，但也开發出自己的獨立顯卡。

顯示器
主条目：顯示器
又稱監視器、螢幕等，是電腦的圖像顯示設備，一般獨立於機箱。被廣泛應用于電腦上的顯示器主要平板顯示器（如液晶显示器），CRT顯示器已經被市場淘汰。

鍵盤
主条目：电脑键盘
键盘是电脑的重要输入设备之一，是向电脑输入文本及其他数据的首要方式。现代个人电脑标准键盘一般有107個按键，多沿用打字机所採用的QWERTY佈局，只是新增了功能鍵、方向鍵等電腦所需的鍵，有的鍵盤還設有一些額外的功能鍵。鍵盤的每个键上均有標明其所对应的字母、数字或功能。在用鍵盤向計算機輸入數據時，通常一次只需按一個鍵，但也可能需要同時按下多個鍵，亦即組合鍵。各個按鍵所對應的功能不是固定的，許多程序都會對鍵盤各鍵的功能重新定義，實際操作時需重新記憶。

鼠标
主条目：鼠标
鼠标是一种小巧、可滑動的裝置，也是當代電腦重要和十分常見的輸入設備之一。在圖形使用者界面上，使用者通過滑動和點擊鼠标等操作可向電腦輸入命令和數据。滑鼠可通過PS/2接口、USB-A 或者USB Type-C與電腦相連，有的鼠標還可以通過藍牙連接。

早期的滑鼠（及蘋果電腦滑鼠）只有一個按鍵，而現在則有兩或三個以上，其中或包括一個滑輪，可以进行的操作包括移動、單擊、雙擊、拖拽等。

外部儲存媒體
硬盘是用於存儲數據資料最基本和最重要的部件之一。與内存不同，其中的數據資料在斷電之後不會消失。广义的硬盘是指包括机械硬盘和固态硬盘在内的大容量外部存储设备。狭义的硬盘通常指与固态硬盘相对的机械硬盘。其他外部存储设备包括但不限于闪存盘、软盘（已经过时）和光盘。

機械硬碟

西部數據2TB SATA硬碟
主条目：硬盘
機械硬碟（Hard Disk Drive， HDD）的運作基本原理是經由馬達帶動內部的盘片（表面塗有磁性物質）高速旋轉，再利用讀取頭寫入與讀取資料（電磁鐵原理）。隨著製造技術的進步，馬達轉速愈來愈高，可以加快資料存取速度，以SATA與早年的IDE大多為7200轉/分的機械硬碟，SAS/SCSI的可達到15000轉/分（但是10K/15K轉速的硬碟噪音很大，通常用於伺服器/工作站）。另外、隨著垂直寫入技術的發展，硬碟容量亦愈來愈大，現時3.5吋的機械硬碟最大容量已經來到8~10TB。機械硬碟依大小可分為3.5吋（桌上型電腦主流）、2.5吋（筆記型電腦主流）、1.8吋（UMPC等移動電腦使用），現今機械硬盘市占率持續下降，但因为有容量大、价格便宜、数据可恢复的优势，暂时不会會被固態硬碟完全取代。

固態硬碟
主条目：固态硬盘
固態硬碟（Solid State Disk、Solid State Drive，簡稱SSD），是一種基於快閃記憶體技術的儲存媒體。不像傳統硬碟是以磁性媒體做為儲存的媒體，因此也無需碟片與馬達相關零件，因此不會有馬達旋轉時所造成的噪音。優點是高速存取、低功耗、抗震動，目前容量價格比仍是其缺點，但隨著固態硬碟的不斷發展，固態硬碟的容量已有實用性，價錢明顯下滑之下，已為傳統硬碟市場製造危機。固態硬碟採用標準2.5吋SATA介面和長短不一的M.2介面還有M.2 PCI Express 介面，完全相容於主流個人電腦裝置。

軟式磁碟機

3.5英寸软盘
主条目：软盘
軟式磁碟機，是以往個人電腦的重要設備之一，可插入可移動式的軟盤。 2000年前由於價格便宜，並且為當時系統恢復及升級BIOS時必備的工具，因而在大多數電腦上都有裝備。然而軟碟容量小，穩定性不佳，現時已幾乎被快閃記憶體所製成的USB碟取代。在現代的個人電腦上已被淘汰。

光碟機
主条目：光盘驱动器
光碟機依其能夠讀取或讀寫的光碟片，常見的主要分為CD光碟機、DVD光碟機與BD光碟機這3類。再細分為唯讀的光碟機、燒錄器、Combo光碟機（CD-RW燒錄與DVD-ROM唯讀）也是受到USB碟的衝擊，在現代電腦上逐漸淘汰。

其他
USB隨身碟
磁光碟
移動硬碟、硬碟盒
其他硬體
通訊
有線網路卡
無線網路卡
多媒体
麥克風
耳機、揚聲器
摄像头
其他
印表機
扫描仪
讀卡機
軟體
作業系統
主条目：作業系統
[17]作業系統用於管理与控制計算機資源，並可讓用戶通過各種程序使用這些資源。它是计算机运行的平台以及应用软件的基础。目前PC市場上佔有率最高的是微軟所推出的Windows系列，其次是蘋果公司推出的macOS，再來是有開放原始碼的Linux和類Unix系列的操作系统比如FreeBSD等。

Microsoft Windows
主条目：Microsoft Windows
Microsoft Windows是微軟公司所推出的一系列作業系統。1985年11月微軟推出了一個名為「Windows」的擁有图形用户界面（GUI）的作業環境，這之後，又相繼推出了不同版本的Windows。目前最新的Windows作業系統是Windows 10和Windows Server 2019，目前市場佔有率最高的是Windows 10。Microsoft Windows在個人電腦領域有壓倒性的優勢，全球約90%的個人電腦運行Microsoft Windows（各個版本加起來的總和）。

macOS
主条目：MacOS
macOS是蘋果公司研發和推出的一系列作業系統，macOS（/ˌmækʔoʊˈɛs/；2011年及之前稱 Mac OS X，2012年至2015年稱 OS X）是蘋果公司推出的基於圖形化使用者介面作業系統，為麥金塔（Macintosh，簡稱 Mac）系列電腦的主作業系統。


Chrome OS[18]與Chrome OS Flex[19]和Chromium OS[20]

主条目：ChromeOS
主条目：Chromium OS

Chrome OS 是由Google設計基於Linux核心的作業系統，並使用Google Chrome瀏覽器作為其主要使用者介面。因此Chrome OS 主要支援Web應用程式，2016年起開始陸續相容Android應用程式（可通過Google Play商店下載），在此之前Google都只在裝在套裝筆電和套裝桌電上並不開放一般使用者安裝，一般使用者只能買套裝電腦或是使用業餘玩家開發的Chromium OS安裝，2020年Google於收購了Neverware，並在2022年2月釋出基於CloudReady的Chrome OS Flex，正式開放給一般使用者安裝。目前Chrome OS是市場第二歡迎的作業系統

GNU/Linux

screenshot of Debian 7.3 (wheezy) amd64 with GNOME 3.4.2
主条目：Linux
Linux最開始是芬蘭黑客Linus Torvalds開發的内核，後來結合GNU計劃組成GNU/Linux，各个部分由不同人协作结合而成，以GPL開放源代碼，可自由使用以及在GPL下進行修改以及分發。

嚴格而言Linux只是指內核。一個完整的GNU/Linux發行版由Linux內核、桌面環境（例如GNOME、KDE）及其他應用軟件（GNU計劃開發的軟件為主）組成。

GNU/Linux有數量眾多的發行版，現時最流行的GNU/Linux發行版都是基於Debian，如Ubuntu及Linux Mint。還有Fedora、CentOS等。OpenSUSE也是一個較多人使用的GNU/Linux發行版。

維基百科就是寄存於運行Ubuntu的伺服器上。GNU/Linux在超級電腦、伺服器、Mainframe（大型電腦）上的市場佔有率很高，在桌上型電腦上的市場佔有率很低，遠不及MS Windows及Google Chrome OS和Mac macOS，但正在穩定抬升。

[显示]查论编
Linux发行版
[显示]查论编
Linux
UNIX & 類Unix
主条目：UNIX
主条目：類UNIX
UNIX作業系統，是一個強大的多使用者、多工作業系統，支援多種處理器架構，按照作業系統的分類，屬於分時作業系統，最早由Ken Thompson、Dennis Ritchie和Douglas McIlroy於1969年在AT&T的貝爾實驗室開發。目前它的商標權由國際開放標準組織所擁有，只有符合單一UNIX規範的UNIX系統才能使用UNIX這個名稱，否則只能稱為類UNIX（UNIX-like）。類Unix系統（英語：Unix-like；經常被稱為UN*X或*nix）指各種Unix的衍生系統，比如FreeBSD、OpenBSD、SUN公司的Solaris，以及各種與傳統Unix類似的系統，例如Minix、Linux、QNX等。它們雖然有的是自由軟體，有的是私有軟體，但都相當程度地繼承了原始UNIX的特性，有許多相似處，並且都在一定程度上遵守POSIX規範。

應用軟體
主条目：应用软件
应用软件是為执行各種特定的任務或解决特定的问题而开发的程序。應用程序依賴於作業系統等系统软件的支援，需要系統軟體为其提供内存管理、網絡連接以及設備驅動等常規服務。

常見的應用软件包括文字處理程序等办公软件、媒體播放程序等多媒体软件以及遊戲軟體等。

驅動程式
主条目：驅動程式
驅動程式可以使高階電腦軟體与硬件进行互動。這種程序建立了一個硬體與硬體，或硬體與軟體溝通的介面，經由主機板上的匯流排或其它溝通子系統與硬體形成連接的機制，使得硬體裝置上的資料交換成為可能。

製造廠商
蘋果公司（Apple）、微軟（Microsoft）、戴尔（DELL）、惠普（HP）、富士通（Fujitsu）、联想集團（Lenovo）、IBM[註 2]、索尼（SONY）、日本电气（NEC）、VAIO、东芝（TOSHIBA）、三星电子（Samsung）、LG電子、華碩（ASUS）、宏碁（Acer）、微星科技（MSI）、技嘉科技（GIGABYTE）、華擎科技 (ASRock)、华为(Huawei)等都是世界性的知名電腦品牌。

用途
電腦遊戲
主条目：電競電腦

公用服務站
PC被很多人作為電腦遊戲機使用，不同於遊戲機，PC的硬件可以更換而且更新速度快，也因此有些電腦廠商因應此趨勢而推出電競電腦，亦即針對遊戲需求而組裝的電腦。儘管如此，遊戲的效果始終取決於對遊戲機的兼容度，多數遊戲機專用遊戲只為遊戲機作優化，而非為PC優化，不管PC硬件多先進，該類遊戲上始終不如遊戲機，不過隨著PC的發展，目前大部分多平臺的遊戲中，PC平台版本的遊戲在PC的硬體配置程度較優的情況下，遊戲的畫面幀率以及對遊戲的可修改性（如：修改MOD）上對比遊戲機有明顯的優勢。然而總體而言，PC用模擬器模擬遊戲機遊戲仍常較緩慢且體驗品質較差，因為PC並非該電視遊戲專用的遊戲機。Android也有PC模擬器，在PC操作上Android的操作類似PC，意外地兩者非常搭配。

多媒體設備
PC可擴展性使很多人利用PC作為家庭的多媒體系統，例如加裝電視卡、遙控器、5.1聲道音響，以及利用DVD、藍光光驅等代替專業的家庭劇院設備，以同時享受多種樂趣。

公用服務站
公共場所的公用資訊服務站很多也是用PC零件組裝生產，內載特製化過的作業系統和軟體，只能執行特定公共服務功能，例如向特定網路商訂票、訂機位、查資料，連線特定金融機構轉帳或金融服務等。

流行文化
2018年由The Irregular Corporation出品的電腦遊戲PC Building Simulator即為一款以PC組裝為主題的電腦遊戲。

注释
 实际上除了隨機存取記憶體外，主板上的唯讀記憶體（ROM）也屬「内存」之一，其中存放的資料在斷電情況下不會消失。但它主要用於保存系統的引導程式和自檢程式等，且容量相对很小，因此俗称的「内存」一般不將其包括在内。
 2005年，IBM个人电脑业务和笔记型电脑业务全部并入Lenovo。
參考文獻
 TVBS. 世紀大變化 個人電腦問世25年│TVBS新聞網. TVBS. [2022-02-18]. （原始内容存档于2022-03-11） （中文（臺灣））.
 Pocket Computer May Replace Shopping List. The New York Times. November 3, 1962.
 The 8-Bit Guy官方頻道-PDP. [2019-07-31]. （原始内容存档于2020-11-20）.
 9100A desktop calculator, 1968 (PDF). Hewlett-Packard. [2008-02-13]. （原始内容存档 (PDF)于2014-03-19）.
 Timeline of Computer History （页面存档备份，存于互联网档案馆）. 于2008年7月22日查阅
 别忘记它—— Lisa 不平凡的一生仍在继续. 少数派. [2018-07-07]. （原始内容存档于2020-11-06）.
 Apple 推出 M1. Apple Newsroom (台灣). [2022-02-18]. （原始内容存档于2022-04-02） （中文（臺灣））.
 Team, Discuz! Team and Comsenz UI. Google 推出新一代 Chromebook 與 Chromebox 嗆蘋果！. 普洛影音網｜音響論壇｜新視聽. [2022-06-04].
 宅經濟效應退場，預估 2022 全年筆電出貨量達 237.9 百萬台. TechNews 科技新報. [2022-02-22]. （原始内容存档于2022-03-10） （中文（臺灣））.
 'Netbooks,' 'Nettops' target secondary PC users - INQUIRER.net, Philippine News for Filipinos. web.archive.org. 2008-06-11 [2022-02-22]. 原始内容存档于2008-06-11.
 Intel reveals skinny Ivy Bridge 'Ultrabooks,' Moore's Law-defying Atoms. Engadget. [2022-02-22]. （原始内容存档于2022-03-11） （美国英语）.
 Ferreño, Eder. Chromebook：什麼是什麼，什麼是Chrome操作系統. Windows Noticias. 2019-06-25 [2022-06-04] （中文（臺灣））.
 Ingraham, Nathan. Apple has sold 170 million iPads since it launched in April 2010. The Verge. 2013-10-22 [2022-02-22]. （原始内容存档于2022-03-10） （英语）.
 业内：涉足新领域 明基四季度推出UMPC_天极网. web.archive.org. 2011-12-19 [2022-02-25]. 原始内容存档于2011-12-19.
 机箱. IT168术语详解. [2010-12-20]. （原始内容存档于2010-08-09）.
 电脑（ＰＣ）电源基本工作原理介绍. 2008年8月6日 [2010年12月20日]. （原始内容存档于2009年1月7日）.
 電腦軟體的介紹. web.archive.org. 2014-05-23 [2022-02-18]. 原始内容存档于2014-05-23.
 Kyle, 科技產業資訊室 (iKnow)-. 谷歌整合安卓與Chrome OS勢在必行. iKnow科技產業資訊室. 2016-11-21 [2022-04-04]. （原始内容存档于2021-05-06）.
 舊電腦變 ChromeBook！ Google 發表 Chrome OS Flex. PCM. 2022-02-17 [2022-04-04]. （原始内容存档于2022-04-15） （中文（香港））.
 Releasing the Chromium OS open source project. Official Google Blog. [2022-04-04]. （原始内容存档于2009-11-21） （英语）.
电子计算机
维基百科，自由的百科全书

本條目存在以下問題，請協助改善本條目或在討論頁針對議題發表看法。
此條目需要补充更多来源。 (2014年6月1日)
请协助補充多方面可靠来源以改善这篇条目，无法查证的内容可能會因為异议提出而被移除。
致使用者：请搜索一下条目的标题（来源搜索："电子计算机" — 网页、新闻、书籍、学术、图像），以检查网络上是否存在该主题的更多可靠来源（判定指引）。
此條目可参照英語維基百科相應條目来扩充。 (2020年10月1日)
若您熟悉来源语言和主题，请协助参考外语维基百科扩充条目。请勿直接提交机械翻译，也不要翻译不可靠、低品质内容。依版权协议，译文需在编辑摘要注明来源，或于讨论页顶部标记{{Translated page}}标签。
Disambig gray.svg  此條目介紹的是电子计算机。关于計算器，请见「電子计算器」。关于其他用法，请见「計算機」。
Disambig gray.svg  「电脑」重定向至此。关于口头中常指的电脑，请见「个人电脑」。
「电子计算机」的各地常用別名
GEC4080FrontPanel.gif
1970年代早期的GEC4080小型機
中国大陸	电子计算机、电脑、计算机、脑
臺灣	計算機[1][2]、電腦
港澳	電腦
馬新	电脑
日本	電子計算機[3]、電算機、コンピューター
韓國	컴퓨터、電算機[4]

超級電腦-走鵑(2009)

wristwatch中的手錶型Linux系統電腦。電腦也可以很小，不限於一般所指的“PC”——個人電腦
电子计算机（Electronic computer）亦稱电脑，是利用数字电子技术，根据一系列指令指示並且自动执行任意算术或逻辑操作序列的设备。通用计算机因有能遵循被称为“程序”的一般操作集的能力而使得它们能够执行极其广泛的任务。

计算机被用作各种工业和娛樂设备的控制系统。这包括简单的特定用途设备（如微波炉和遥控器）、工业设备（如工业机器人和计算机晶片），及通用设备（如个人电脑和智能手机之类的移动设备）等。尽管计算机种类繁多，但根据图灵机理论，一部具有著基本功能的计算机，应当能够完成任何其它计算机能做的事情。因此，理论上从智能手机到超级计算机都应该可以完成同样的作业（不考虑时间和存储因素）。由于科技的飞速进步，下一代计算机总是在性能上能够显著地超过其前一代，这一现象有时被称作“摩尔定律”。通过互联网，计算机互相连接，极大地提高了信息交换速度，反过来推动了科技的发展。在21世纪的现在，计算机的应用已经涉及到方方面面，各行各业了。

自古以来，简单的手动设备——就像算盘——帮助人们进行计算。在工业革命初期，各式各样机械的出现，初衷都是为了自动完成冗长而乏味的任务，例如织机的编织图案。更复杂的机器在20世纪初出现，通过模拟电路进行复杂特定的计算。第一台数字电子计算机出现于第二次世界大战期间。自那时以来，电脑的速度，功耗和多功能性則不断增加。在现代，机械计算机的应用已经完全被电子计算机所取代。

计算机在组成上形式不一。依然有大量体积庞大的巨型计算机为特别的科学计算或面向大型组织的事务处理需求服务。比较小的、为个人应用而设计的称为微型计算机（Personal Computer，PC），在中國地區简称為「微机」。今天在日常使用“计算机”一词时通常也是指此，不过现在计算机最为普遍的应用形式却是嵌入式，嵌入式计算机通常相对简单、体积小，并被用来控制其它设备——无论是飞机、工业机器人还是数码相机[5]。

同计算机相关的技术研究叫電腦科學，而「计算机技术」指的是将计算机科学的成果应用于工程实践所派生的诸多技术性和经验性成果的总合。「计算机技术」与「计算机科学」是两个相关而又不同的概念，它们的不同在于前者偏重于实践而后者偏重于理论。至於由数据为核心的研究則称為信息技术。

传统上，现代计算机包含至少一个处理单元（通常是中央处理器（CPU））和某种形式的存储器。处理元件执行算术和逻辑运算，并且排序和控制单元可以响应于存储的信息改变操作的顺序。外围设备包括输入设备（键盘、鼠标、操纵杆等）、输出设备（显示器屏幕、打印机等）以及执行两种功能（例如触摸屏）的输入/输出设备。外围设备允许从外部来源检索信息，并使操作结果得以保存和检索。


目录
1	历史
2	原理
3	电路实现
4	输入输出设备
5	程序
5.1	函数库与操作系统
6	应用
6.1	网络、国际互联网
7	下一代计算机
8	计算机学科
9	參考文獻
10	参见
11	外部連結
历史
主条目：计算机硬件历史
本来，计算机的英文原词“computer”是指从事数据计算的人。而他们往往都需要借助某些机械计算设备或模拟计算机。

这些早期计算设备的祖先包括有算盘，以及可以追溯到公元前87年的被古希腊人用于计算行星移动的安提基特拉机械。随着中世纪末期欧洲数学与工程学的再次繁荣，1623年德国博学家Wilhelm Schickard率先研制出了欧洲第一部计算设备，這是一個能進行六位以內數加減法，並能通過鈴聲輸出答案的“計算鐘”。使用轉動齒輪來進行操作。

1642年法國數學家布莱士·帕斯卡在英国数学家威廉·奥特雷德所制作的“計算尺”的基礎上，將其加以改進，使能進行八位計算。還賣出了許多製品，成為當時一種時髦的商品。

1801年，法国人约瑟夫·玛丽·雅卡尔对织布机的设计进行改进，使用一系列打孔的纸卡片来作为编织复杂图案的程式。尽管这种被称作“雅卡尔织布机”的机器并不被认为是一部真正的计算机，但是其可程式化性质使之被视为现代计算机发展过程中重要的一步。

查尔斯·巴貝奇于1820年构想和设计了第一部完全可程式化计算机。但由于技术条件、经费限制，以及无法忍耐对设计不停的修补，这部计算机在他有生之年始终未能问世。约到19世纪晚期，许多后来被证明对计算机科学有着重大意义的技术相继出现，包括打孔卡片以及真空管。德裔美籍统计学家赫爾曼·何樂禮设计了一部制表用的机器，其中便应用打孔卡片来进行大规模自动数据处理。

在20世纪前半叶，为了迎合科学计算的需要，许多专门用途的、复杂度不断增长的模拟计算机被研制出来。这些计算机都是用它们所针对的特定问题的机械或电子模型作为计算基础。1930－1940年代，计算机的性能逐渐强大并且通用性得到提升，现代计算机的关键特色被不断地加入进来。

1936年，艾伦·图灵提出了图灵机。

1937年，年仅21岁的麻省理工学院研究生克劳德·香农发表了论文《繼電器和開關電路的符號分析》，文中首次提及数字电子技术的应用。他向人们展示了如何使用开关来实现逻辑和数学运算。此后，他通过研究万尼瓦尔·布什的微分模拟器进一步巩固了他的想法。这是一个标志着二进制电子电路设计和逻辑门应用开始的重要时刻，而这些关键思想诞生的先驱，应当包括：阿尔蒙·斯特罗格，他为一个含有逻辑门电路的设备申请了专利；尼古拉·特斯拉，他早在1898年就曾申请含有逻辑门的电路设备；李·德富雷斯特，于1907年他用真空管代替了继电器。


HP Jornada 690開啟了手機和電腦結合的早期概念，成為智能手機早期概念典範
沿着这样一条上下求索的漫漫长途去定义所谓的“第一部电子计算机”可谓相当困难。1941年5月12日，德国工程师康拉德·楚澤完成了他的图灵完全机电一体计算机“Z3”，这是第一部具有自动二进制数学计算特色以及可行的程式化功能的计算机，但还不是“电子”计算机。此外，其他值得注意的成就主要有：

1941年夏天诞生的阿塔纳索夫-贝瑞计算机是世界上第一部电子计算机，它使用了真空管计算器，二进制数值，可复用内存；在英国于1943年被展示的神秘的巨像计算机（Colossus computer），尽管程式化能力极為有限，但是它使人们确信使用真空管既值得信赖，又能实现电气化的再编程；哈佛大学的馬克一號；以及基于二进制的ENIAC，全名為電子數值積分計算器，这是第一部通用意图的计算机，但由于其结构设计不够弹性化，导致对它的每一次再编程都要重新连接電子线路。

1940年代的第二次世界大戰中，為訓練轟炸機飛行員，美國海軍曾向麻省理工學院探詢，是否能夠開發出一款可以控制飛行模擬器的計算機。軍方當初的設想只是希望經由該計算機將飛行員模擬操作產生的數據即時反映到儀表盤上。和以前的训练系统林克训练机不同，军方计划系统能尽可能真实地根据空气动力学模型进行模拟，以使其能适用于各种不同类型的飞机。於是麻省理工創造了旋風工程，其製造出了世界上第一臺能夠即時處理資料的旋風電腦，併發明了磁芯儲存裝置。這為個人電腦的發展做出了歷史性的貢獻。

开发埃尼阿克的小组针对其缺陷又进一步改善了设计，并最终呈现出今天我们所熟知的冯·诺伊曼结构（程序存储体系结构）。这个体系是当今所有计算机的基础。 20世纪40年代中晚期，大批基于此一体系的计算机开始研制，其中以英国最早。尽管第一部研制完成并投入运转的是小规模实验机（Small-Scale Experimental Machine，SSEM），但真正被开发出来的实用机很可能是延迟存储电子自动计算器（EDSAC）。

在整个1950年代，真空管计算机居于统治地位。1958年9月12日在后来英特爾的創始人罗伯特·诺伊斯的領導下，發明了集成电路。

不久英特爾又推出了微處理器。1959年到1964年間設計的計算機一般稱為第二代計算機。

到了1960年代，電晶體计算机将其取而代之。晶体管體積更小，速度更快，价格更加低廉，性能更加可靠，这使得它们可以商品化生产。

1964年到1972年的計算機一般被稱為第三代計算機。大量使用集成电路，典型的機型是IBM360系列。

到了1970年代，積體電路技术的引入大大地降低了计算机生产成本，计算机也从此开始走向千家万户。1972年以後的計算機習慣上被稱為第四代計算機。基於大規模積體电路，及後來的超大規模積體电路。Intel 4004是美國英特爾公司 (Intel) 推出的第1款微處理器，也是全球第一款微處理器；1971年11月15日发布。1972年4月1日，英特爾推出8008微處理器。1976年，史蒂夫·賈伯斯和斯蒂夫·沃兹尼亚克創辦蘋果計算機公司。並推出其Apple I計算機。1977年5月Apple II型計算機發佈。1979年6月1日，英特爾發佈了8位元的8088微處理器。

1982年，微電腦開始普及，大量進入學校和家庭。1982年1月康懋達64計算機發佈，價格595美元。

1982年2月Intel 80286發佈。時脈提高到20MHz，並增加了保護模式，可存取640KB記憶體。支援1MB以上的虛擬記憶體。每秒執行270萬條指令，集成了134000個電晶體。

1990年11月，微軟發佈第一代MPC（Multimedia PC，多媒體個人電腦標準）：處理器至少為80286/12 MHz（後來增加到80386SX/16 MHz），有光碟機，傳輸率不少於150 KB/sec。

1994年10月10日英特爾發佈75MHz奔騰處理器。1995年11月1日，Pentium Pro發佈。主頻可達200MHz，每秒鐘完成4.4億條指令，集成了550萬個晶體管。1997年1月8日英特爾發佈Pentium MMX，對遊戲和多媒體功能進行了增強。

此後計算機的變化日新月異，1965年發表的摩尔定律不斷被認證，預測在2030年代以前依然適用。

原理

個人電腦的主要結構：
1. 螢幕
2. 主機板
3. 中央處理器（微處理器）
4. 記憶體
5. 介面卡（如显卡、网卡、声卡）
6. 電源供應器（如變壓器、整流器）
7. 软驱 / 光碟機
8. 硬碟（如固態硬碟固態、磁碟）磁片
9. 鍵盤
10. 鼠标
尽管计算机技术自20世纪40年代第一部电子通用计算机诞生以来以来有了令人目眩的快速发展，但是今天计算机仍然基本上采用的是存储程序结构，即冯·诺伊曼结构。这个结构实现了实用化的通用计算机。

存储程序结构将一部计算机描述成四个主要部分：算术逻辑单元、控制电路、存储器及输入输出设备。这些部件通过一组一组的排线连接（特别地，当一组线被用于多种不同意图的数据传输时又被称为总线），并且由一个時鐘来驱动（当然某些其他事件也可能驱动控制电路）。

概念上讲，一部计算机的存储器可以被视为一组“细胞”单元。每一个“细胞”都有一个编号，称为地址；又都可以存储一个较小的定长信息。这个信息既可以是指令（告诉计算机去做什么），也可以是数据（指令的处理对象）。原则上，每一个“细胞”都是可以存储二者之任一的。

算术逻辑单元（ALU）可以被称作计算机的大脑。它能做两类运算： 第一类是算术运算，比如对两个数字进行加减法。算术运算部件的功能在ALU中是十分有限的，事实上， 一些ALU根本不支持电路级的乘法和除法运算（理由是使用者只能通过编程进行乘除法运算）。第二类是比较运算，即给定两个数， ALU对其进行比较以确定哪个更大一些。[6]

输入输出系统是计算机从外部世界接收信息和向外部世界反馈运算结果的手段。对于一部标准的个人电脑，输入设备主要有键盘和鼠标，输出设备则是显示器、打印机以及其他许多后文将要讨论的可连接到计算机上的I/O设备。

控制系统将以上计算机各部分联系起来。它的功能是从存储器和输入输出设备中读取指令和数据，对指令进行解码， 并向ALU交付符合指令要求的正确输入，告知ALU对这些数据做哪些运算并将结果数据返回到何处。控制系统中一个重要组件就是一个用来保持跟踪当前指令所在地址的计数器。 通常这个计数器随着指令的执行而累加，但有时如果指令指示进行跳转则不依此规则。

20世纪80年代以来ALU和控制单元（二者合称中央处理器）逐渐被整合到一块集成电路上，称作微处理器。 这类计算机的工作模式十分直观：在一个时钟周期内，计算机先从存储器中获取指令和数据，然后执行指令，存储数据，再获取下一条指令。这个过程被反复执行，直至得到一个终止指令。

由控制器解释，运算器执行的指令集是一个精心定义的数目十分有限的简单指令集合。一般可以分为四类：1）、数据移动 （如：将一个数值从存储单元A拷贝到存储单元B）2）、数逻运算（如：计算存储单元A与存储单元B之和，结果返回存储单元C）3）、 条件验证（如：如果存储单元A内数值为100，则下一条指令地址为存储单元F）4）、指令序列改易（如：下一条指令地址为存储单元F）

指令如同数据一样在计算机内部是以二进制来表示的。比如说，10110000就是一条Intel x86系列微处理器的拷贝指令代码。 某一个计算机所支持的指令集就是该计算机的机器语言。因此，使用流行的机器语言将会使既成软件在一部新计算机上运行得更加容易。所以对于那些机型商业化软件开发的人来说，它们通常只会关注一种或几种不同的机器语言。

更加强大的小型计算机，大型计算机和服务器可能会与上述计算机有所不同。它们通常将任务分担给不同的CPU来执行。今天， 微处理器和多核个人电脑也在朝这个方向发展。[6]

超级计算机通常有着与基本的存储程序计算机显著区别的体系结构。它们通常有着数以千计的CPU， 不过这些设计似乎只对特定任务有用。在各种计算机中，还有一些微控制器采用令程序和数据分离的哈佛架構（Harvard architecture）。

电路实现

集成電路是現今電子計算機基礎
以上所说这一些概念性设计的物理实现是多种多样的。如同我们前述所及，一部存储程序式计算机既可以是巴比奇的机械式的， 也可以是基于数字电子的。但是，数字电路能通过诸如继电器之类的电子控制开关来实现使用2进制数的算术和逻辑运算。 香农的论文正是向我们展示了如何排列继电器来组成能够实现简单布尔运算的逻辑门。其他一些学者很快指出使用真空管可以代替继电器电路。 真空管最初被用作无线电电路中的放大器，之后便开始被越来越多地用作数字电子电路中的快速开关。当电子管的一个针脚被通电后，电流就可以在另外两端间自由通过。

通过逻辑门的排列组合我们可以设计完成很多复杂的任务。举例而言，加法器就是其中之一。 该器件在电子领域实现了两个数相加并将结果保存下来—在计算机科学中这样一个通过一组运算来实现某个特定意图的方法被称做一个算法。 最终，人们通过数量可观的逻辑门电路组装成功了完整的ALU和控制器。说它数量可观，只需看一下CSIRAC这部可能是最小的实用化电子管计算机。 该机含有2000个电子管，其中还有不少是双用器件，也即是说总计合有2000到4000个逻辑器件。

真空管对于制造规模庞大的门电路明显力不从心。昂贵，不稳（尤其是数量多时），臃肿，能耗高，并且速度也不够快—尽管远超机械开关电路。 这一切导致20世纪60年代它们被晶体管取代。后者体积更小，易于操作，可靠性高，更省能耗，同时成本也更低。

20世纪60年代后，晶体管开始逐渐为将大量晶体管、其他各种电器元件和连接导线安置在一片硅板上的集成电路所取代。 70年代，ALU和控制器作为组成CPU的两大部分，开始被集成到一块芯片上，并称为“微处理器”。沿着集成电路的发展史，可以看到一片芯片上所集成器件的数量有了飞速增长。第一块集成电路只不过包含几十个部件，而到了2015年，一块Intel Core i7处理器上的晶体管数目高达十九亿之巨。

无论是电子管，晶体管还是集成电路，它们都可以通过使用一种触发器设计机制来用作存储程序体系结构中的“存储”部件。 而事实上触发器的确被用作小规模的超高速存储。但是，几乎没有任何计算机设计使用触发器来进行大规模数据存储。 最早的计算机是使用Williams电子管向一个电视屏或若干条水银延迟线（声波通过这种线时的走行速度极为缓慢足够被认为是“存储”在了上面） 发射电子束然后再来读取的方式来存储数据的。当然，这些尽管有效却不怎么优雅的方法最终还是被磁性存储取而代之。比如说磁芯存储器， 代表信息的电流可在其中的铁质材料内制造恒久的弱磁场，当这个磁场再被读出时就实现了数据恢复。动态随机存储器亦被发明出来。它是一个包含大量电容的集成电路，而这些电容器件正是负责存储数据电荷—电荷的强度则被定义为数据的值。

输入输出设备

6支接腳的小型PS/2輸入接口

Canon S520印表機
输入输出设备（I/O）是对将外部世界信息发送给计算机的设备和将处理结果返回给外部世界的设备的总称。 这些返回结果可能是作为使用者能够视觉上体验的，或是作为该计算机所控制的其他设备的输入：对于一部机器人，控制计算机的输出基本上就是这部机器人本身，如做出各种行为。

第一代计算机的输入输出设备种类非常有限。通常的输入用设备是打孔卡片的读卡机，用来将指令和数据导入内存；而用于存储结果的输出设备则一般是磁带。随着科技的进步，输入输出设备的丰富性得到提高。以个人计算机为例：键盘和鼠标是用户向计算机直接输入信息的主要工具，而显示器、打印机、扩音器、耳机则返回处理结果。此外还有许多输入设备可以接受其他不同种类的信息，如数码相机可以输入图像。在输入输出设备中，有两类很值得注意：第一类是二级存储设备，如硬盘，光碟或其他速度缓慢但拥有很高容量的设备。第二个是计算机网络访问设备，通过他们而实现的计算机间直接数据传送极大地提升了计算机的价值。今天，国际互联网成就了数以千万计的计算机彼此间传送各种类型的数据。

程序
简单说，计算机程序就是计算机执行指令的一个序列。它既可以只是几条执行某个简单任务的指令，也可能是可能要操作巨大数据量的复杂指令队列。许多计算机程序包含有百万计的指令，而 其中很多指令可能被反复执行。在2005年，一部典型的個人電腦可以每秒执行大约30亿条指令。计算机通常并不会执行一些很复杂的指令来获得额外的机能，更多地它们是在按照程序员的排列来运行那些较简单但为数众多的短指令。

一般情况下，程序员们是不会直接用机器语言来为计算机写入指令的。那么做的结果只能是费时费力、效率低下而且漏洞百出。 所以，程序员一般通过“高级”一些的语言来写程序，然后再由某些特别的计算机程序，如解释器或编译器将之翻译成机器语言。 一些编程语言看起来很接近机器语言，如汇编程序，被认为是低级语言。而另一些语言，如即如抽象原则的Prolog，则完全无视计算机实际运行的操作细节，可谓是高级语言。对于一项特定任务，应该根据其事务特点，程序员技能，可用工具和客户需求来选择相应的语言，其中又以客户需求最为重要（美国和中国军队的工程项目通常被要求使用Ada语言）。

计算机软件是与计算机程序并不相等的另一个词汇。计算机软件一个较为包容性较强的技术术语，它包含了用于完成任务的各种程序以及所有相关材料。举例说，一个视频游戏不但只包含程序本身，也包括图片、声音以及其他创造虚拟游戏环境的数据内容。在零售市场，在一部计算机上的某个应用程序只是一个面向大量用户的软件的一个副本。这里老生常谈的例子当然还是微软的office软件组，它包括一系列互相关联的、面向一般办公需求的程序。

利用那些极其简单的机器语言指令来实现无数功能强大的应用软件意味着其编程规模注定不小。Windows XP这个操作系统程序包含的C++高级语言源代码达到了4000万行。当然这还不是最大的。如此庞大的软件规模也显示了管理在开发过程中的重要性。实际编程时，程序会被细分到每一个程序员都可以在一个可接受的时长内完成的规模。

即便如此，软件开发的过程仍然进程缓慢，不可预见且遗漏多多。应运而生的软件工程学就重点面向如何加快作业进度和提高效率与质量。

函数库与操作系统
在计算机诞生后不久，人们发现某些特定作业在许多不同的程序中都要被实施，比如说计算某些标准数学函数。出于效率考量，这些程序的标准版本就被收集到一个“库”中以供各程序调用。许多任务经常要去额外处理种类繁多的输入输出接口，这时，用于连接的库就能派上用场。

20世纪60年代，随着计算机工业化普及，计算机越来越多地被用作一个组织内不同作业的处理。很快，能够自动安排作业时序和执行的特殊软件出现了。这些既控制硬件又负责作业时序安排的软件被称为“操作系统”。一个早期操作系统的例子是IBM的OS/360。

在不断地完善中，操作系统又引入了时间共享机制——并发。这使得多个不同用户可以“同时”地使用机器执行他们自己的程序，看起来就像是每个人都有一部自己的计算机。为此，操作系统需要向每个用户提供一部“虚拟机”来分离各个不同的程序。由于需要操作系统控制的设备也在不断增加，其中之一便是硬盘。因之，操作系统又引入了文件管理和目录管理（文件夹），大大简化了这类永久储存性设备的应用。此外，操作系统也负责安全控制，确保用户只能访问那些已获得允许的文件。

当然，到目前为止操作系统发展历程中最后一个重要步骤就是为程序提供标准图形用户界面。 尽管没有什么技术原因表明操作系统必须得提供这些界面，但操作系统供应商们总是希望并鼓励那些运行在其系统上的软件能够在外观和行为特征上与操作系统保持一致或相似。

除了以上这些核心功能，操作系统还封装了一系列其他常用工具。其中一些虽然对计算机管理并无重大意义，但是于用户而言很是有用。比如，苹果公司的Mac OS X就包含视频剪辑应用程序。

一些用于更小规模的计算机的操作系统可能没用如此众多的功能。早期的微型计算机由于记忆体和处理能力有限而不会提供额外功能，而嵌入式计算机则使用特定化了的操作系统或者干脆没有，它们往往通过应用程序直接代理操作系统的某些功能。

应用

IBM System z9銀行用金融伺服器，現代金融業早已大量依賴電腦和網路來運作

美國戰術數位資訊鏈路TADIL終端機
起初，体积庞大而价格昂貴的数字计算机主要是用做执行科学计算，特别是军用课题。如ENIAC最早就是被用作火炮弹计算和设计氢弹时计算断面中子密度的（如今许多超级计算机仍然在模拟核试验方面发挥着巨大作用）。澳大利亚设计的首部存储程序计算机CSIRAC负责对水电工程中的集水地带的降雨情形进行评估。还有一些被用于解密，比如英国的“巨像”可编程计算机。除去这些早年的科学或军工应用，计算机在其他领域的推广亦十分迅速。

从一开始，存储程序计算机就与商业问题的解决息息相关。早在IBM的第一部商用计算机诞生之前，英国約瑟·里昂公司就设计制造了里昂一號以进行资产管理或迎合其他商业用途。由于持续的体积与成本控制，计算机开始向更小型的组织内普及。加之20世纪70年代微处理器的发明，廉价计算机成为了现实。80年代，个人计算机全面流行，电子文档写作与印刷，计算预算和其他重复性的报表作业越来越多地开始依赖计算机。

随着计算机便宜起来，创作性的艺术工作也开始使用它们。人们利用合成器，计算机图形和动画来创作和修改声音，图像，视频。视频游戏的产业化也说明了计算机在娱乐方面也开创了新的历史。

计算机小型化以来，机械设备的控制也开始仰仗计算机的支持。其实，正是当年为了建造足够小的嵌入式计算机来控制阿波羅1號才刺激了集成电路技术的跃进。今天想要找一部不被计算机控制的有源机械设备要比找一部哪怕是部分计算机控制的设备要难得多。可能最著名的计算机控制设备要非机器人莫属，这些机器有着或多或少人类的外表和并具备人类行为的某一子集。在批量生产中，工业机器人已是寻常之物。不过，完全的拟人机器人还只是停留在科幻小说或实验室之中。

机器人技术实质上是人工智能(AI人工智慧)领域中的物理表达环节。所谓人工智能(AI人工智慧)是一个定义模糊的概念但是可以肯定的是这门学科试图令计算机拥有目前它们还没有但作为人类却固有的能力。数年以来，不断有许多新方法被开发出来以允许计算机做那些之前被认为只有人才能做的事情。比如读书、下棋。然而，到目前为止，在研制具有人类的一般“整体性”智能的计算机方面，进展仍十分缓慢。

网络、国际互联网
20世纪50年代以来计算机开始用作协调来自不同地方之信息的工具，美国军方的贤者系统（SAGE）就是这方面第一个大规模系统。之后“军刀”等一系列特殊用途的商业系统也不断涌现出来。

70年代后，美国各大院校的计算机工程师开始使用电信技术把他们的计算机连接起来。由于这方面的工作得到了ARPA的赞助，其计算机网络也就被称为ARPANET。此后，用于ARPA网的技术快速扩散和进化，这个网络也冲破大学和军队的范围最终形成了今天的国际互联网。网络的出现导致了对计算机属性和边界的再定义。太阳微系统公司的約翰·蓋吉和比尔·乔伊就指出：“网络即是计算机”。计算机操作系统和应用程序纷纷向能访问诸如网内其它计算机等网络资源的方向发展。最初这些网络设备仅限于为高端科学工作者所使用，但90年代后随着电子邮件和万维网技术的扩散，以及以太网和ADSL等网络连接技术的廉价化，互联网络已变得无所不在。今日入网的计算机总数，何止以千万计；无线互联技术的普及，使得互联网在移动计算环境中亦如影随形。比如在笔记本计算机上广泛使用的Wi-Fi技术就是无线上网的代表性应用。

90年代之後，在電話數據機MODEM 技術成熟後，由窄頻的電話撥接，升級成為寬頻數據，這代表網路新時代來臨，由慢跑的速度改變而成開車的速度，也同時改變電腦使用者習慣，更大大普及網路連絡傳訊的方式，如即時通或SKYPE等等，以往只能文字傳訊提升至影音傳輸；而雲端、大數據時代造就了各種新型態行業，如網路商店、網路電商、網路拍賣、網路銷售、網路遊戲、網路設計及架設，以及越來越普遍性的雲端數據資料庫或備份庫，正在時時優化及改變現有人類的生活。

下一代计算机
自问世以来数字计算机在速度和能力上有了可观的提升，迄今仍有不少课题显得超出了当前计算机的能力所及。 对于其中一部分课题，传统计算机是无论如何也不可能实现的，因为找到一个解决方法的时间还赶不上问题规模的扩展速度。因此，科学家开始将目光转向生物计算技术和量子理论来解决这一类问题。比如，人们计划用生物性的处理来解决特定问题（DNA计算）。由于细胞分裂的指数级增长方式，DNA计算系统很有可能具备解决同等规模问题的能力。当然，这样一个系统直接受限于可控制的DNA总量。

量子计算机，是利用了量子物理世界的超常特性，一旦能够造出量子计算机，那么它在速度上的提升将令一般傳統计算机难以望其项背。[7]

如今, 人们正在积极研究用许多有前途的新型技术制造计算机，例如光学计算机、DNA 计算机、神经计算机和量子计算机。 大多数计算机都是通用的，能够计算任何可计算的函数，并且仅受其内存容量和运行速度的限制。 然而，不同的计算机设计可以为特定问题提供非常不同的性能； 例如，量子计算机可能会很快破解一些现代加密算法（通过量子分解）。

计算机学科
在当今世界，几乎所有专业都与计算机息息相关。但是，只有某些特定职业和学科才会深入研究计算机本身的制造、编程和使用技术,用来诠释计算机学科内不同研究领域的各个学术名词的涵义不断发生变化，同时新学科也层出不穷。

计算机工程：是电子工程的一个分支，主要研究计算机软硬件和二者间的彼此联系。
计算机科学：是对计算机进行学术研究的传统称谓。主要研究计算技术和执行特定任务的高效算法。该门学科为我们解决确定一个问题在计算机领域内是否可解，如可解其效率如何，以及如何作成更加高效率的程序。时至今日，在计算机科学内已经衍生了许多分支，每一个分支都针对不同类别的问题进行深入研究。
软件工程：着重于研究开发高质量软件系统的方法学和实践方式，并试图压缩并预测开发成本及开发周期。
信息系统：研究计算机在一个广泛的有组织环境（商业为主）中的计算机应用。
许多学科都与其他学科相互交织。如地理信息系统专家就是利用计算机技术来管理地理信息。

全球有三个较大规模的致力于计算机科学的组织：英國電腦學會；美国计算机协会（ACM）；美国电機电子工程师协会。
歷史
「超级计算机」一词并无明确定义，其含义随计算机业界的发展而发生变化。早期的控制数据公司机器可达十倍速于竞争对手，但仍然是比较原始的标量处理器。到了1970年代，大部分超级计算机就已经是向量处理器了，很多是新進者自行开发的廉价处理器来攻占市场。1980年代初期，业界开始转向大规模并行计算系统，这时的超级计算机由成千上万的普通处理器所组成。1980年代中叶，将适量的向量处理器（一般由8个到16个不等）联合起来进行并行计算成为通用的方法。1990年代以后到21世纪初，超级计算机则主要互联基于精简指令集的张量处理器（譬如PowerPC、PA-RISC或DEC Alpha）来进行并行计算。

用途
超级计算机常用于需要大量运算的工作，譬如數值天气預報[2]、运算化学、分子模型、天體物理模拟[3]、汽車設計模擬[4]、密码分析等。


商用PC零件組裝的超級计算机CLIC，於德國開姆尼茨工業大學

1963年使用打孔機的第一代 Atlas超級计算机
设计
超级计算机的创新设计在于把复杂的工作细分为可以同时处理的工作并分配于不同的处理器。他们在进行特定的运算方面表现突出，但在处理一般工作时却不那麼優秀。他们的数据结构是经过精心设计来确保数据及指令及时送达——传递速度的细微差别可以导致运算能力的巨大差别。其输入／输出系统也有特殊设计来提供高頻寬，但是这裡的数据传输延迟却并不重要——超级计算机并非数据交换机。

根据阿姆达尔定律，超级计算机的设计都集中在减少软件上的序列化、用硬件在瓶颈上加速。

技术挑战及其解决方案
超級计算机通常產生大量的高熱，冷卻超級计算机[註 1]是一個很大的問題。
因為資料传送的速度不能比光快，幾公尺的距离導致了幾十奈秒的延遲，而克雷著名的环型设计保持了最短距离。
超级计算机在短时间內消耗及生产大量的数据，需要投入很多资源确保资讯妥善传送及存取。
因超级计算机而开发的技术：

矢量处理器和张量处理器
水冷技术
非均匀访存模型
处理器技术
矢量处理因超级计算机而建立并用于高性能运算。矢量处理技术後来被用于普通计算机内的信号处理架构及单指令流多数据流，例如：电视游乐器及通用圖形處理器等。[5]

操作系统
一般的超級计算机都使用Unix或类Unix操作系统，但在講求絕對高效能的操作環境時，超級计算机開發人員會動用特別的輕量級核心（Light Weight Kernel－LWK），減少中断请求、行程間通訊等開銷以提高效能。[6]

輕量級核心包括Cray XT3的Catamount[7]，Cray XT4的CNL (Compute Node Linux)[8]， 以及IBM藍色基因的CNK（Compute Node Kernel）。[9]

编程環境
訊息傳遞介面及較舊的並列虛擬機器（PVM）常用於非共享內存系統（Distributed Memory System），而OpenMP常用於共享內存並行系統。[10][11]

傳統上Fortran的编译器可以產生比C或C++更高效能目的碼，所以Fortran仍然被使用作科学编程。

優化編譯器
超級计算机需要編譯器優化技術以產生優佳的目的碼，現今的優化編譯器都對向量化（Vectorization）、程式迴圈、記憶體階層及數據局部性進行優化。[12][13][14]

此外，優化編譯器都以高層次的中間表示（Intermediate Representation）優化程式 － 包括Open64編譯器的WHIRL、[15]IBM XL編譯器的Wcode。[16]

數學函数庫
超級计算机主要執行科學運算等擁有大量向量及矩陣浮點計算的程式，因此優化常用的數學函数會提高運算效能。BLAS函数庫使向量及矩陣浮點計算效能大大提高，[17][18]而優佳化數學函数庫則提高三角函數及平方根等數學運算。[19]

平行檔案系統
平行檔案系統屬於分散式檔案系統的一類，支援多客戶端節點、多檔案系統伺服器，以及支援平行I/O（如MPI-IO、HDF5）；現今流行的平行檔案系統包括Lustre和PVFS。[20]

網路技術
超級计算机節點之間的通信一般都需要使用高性能的網路介面，現今大多TOP500的超級计算机使用乙太網路（44.8%）及InfiniBand（41.8%）。[21]

傳統上InfiniBand比乙太網路有更高的頻寬，同時因作業系統呼叫省略（Operating System Bypass）而提供更低的延遲時間（latency）；然而2011年思科系統開發VFIO技術於超級计算机和叢集應用，使一般的乙太網路介面也能提供低延遲時間，從而提升乙太網路在超級计算机的應用層面。[22]

通用超级计算机的类型
大致上可以分为三种：

矢量处理机器能为大量数据同时进行同样的运算。
丛集式处理器特别建立连接处理器及记忆体的通信網路，非均匀访存模型就是最常见的。最快的超级计算机就是使用这个科技。
商品计算机丛集使用高頻寬低延误的網路来连接大量普通商品计算机，建設成一個计算机叢集。
根据摩尔定律及经济规模，一个现代的桌面计算机比15年前的超级计算机有更高性能，皆因某些超级计算机的设计已经放在桌面计算机内。再者，简单晶片的开发及生产成本比特意设计给超级计算机的更便宜。

超级计算机所处理的问题都适合并行化，当中减少处理单元之间的资料传送量。因此，传统的超级计算机可以被计算机丛集所代替。

最快的超级计算机

2015年11月的不同国家/地区之间的超级计算机500强的分布
主条目：TOP500
TOP500列表排名世界上最快的500台超級计算机[23]

主条目：Green500
GREEN500 列表排名世界上最节能的超级计算机[24]

速度單位
超级计算机速度以每秒浮點運算次數"FLOPS"（floating-point operations per second）来作量度单位，常见的表示计算机中的峰值或速度用的单位英汉对照如下：

一個MFLOPS（megaFLOPS）等於每秒100萬（=106）次的浮點運算
一個GFLOPS（gigaFLOPS）等於每秒10億（=109）次的浮點運算
一個TFLOPS（teraFLOPS）等於每秒1兆（=1012）次的浮點運算
一個PFLOPS（petaFLOPS）等於每秒1千兆（=1015）次的浮點運算
一個EFLOPS（exaFLOPS）等於每秒100京（=1018）次的浮點運算
此外，由於浮點積和熔加運算或乘積累加是兩次的浮點運算（每條FMA指令包括加/減及乘），因此當處理器支援FMA指令時，峰值是兩倍每秒所能執行FMA指令的數目。[25]

目前最快的超级计算机
截至2022年6月1日，目前全球最快的超級電腦AMD與美國能源局橡樹嶺實驗室合作打造的超級電腦「Frontier」，運算能力是1.102 ExaFLOPS，和二名的日本理化學研究所（Riken）與富士通（Fujitsu）共同研發的「富岳」（Fugaku）運算能力415.53 PFLPOS約2.6倍。「Frontier」採用AMD代號「Milan」的第三代EPYC伺服器處理器，搭配OCP加速器模組設計的Instinct MI250X加速繪圖卡構成，這也是超級電腦再次由x86架構奪下第一名。[26]

目前最节能的超级计算机
截至2017年11月14号，世界上最节能的超级计算机是日本国立理化学研究所的菖蒲超级计算机B型。[24]

过往的超级计算机
Ambox outdated serious.svg	此條目需要更新。 (2019年2月7日)

IBM藍色基因
2009年10月，中国研制的第一台千万亿次超级计算机在湖南長沙亮相，全系统峰值性能为每秒1.206PFlops。这台名为天河一号的计算机位居同日公布的中国超级计算机前100强之首，也是當時世界上最快的超級计算机。天河一号的研製成功使中国成为继美国之后世界上第二个能够研制千万亿次超级计算机的国家。
2008年11月，IBM的Roadrunner成為當時最快的超級计算机，運算能力為1.105PFlops。
2008年11月16日，克雷公司推出美洲虎系列，運算能力為1.059PFlops，採用45376顆四核心的Opteron處理器，362太字節的記憶體，傳輸總頻寬284GB/Sec，硬碟容量超過10拍字節，內部的資料匯流排頻寬532太字節/秒。這台计算机將放置在美國的國家高速计算机中心，並開放給各界有需要的團體申請使用。
2007年11月，IBM的Blue Gene/L，运算能力為478.2 TFlops，安装了32768個处理器。它是PowerPC架构的修改版本，正式运作版本被推出到很多地点，包括罗兰士利物摩亚国家实验室（Lawrence Livermore National Laboratory）。
在Blue Gene/L之前，最快的超级计算机是日本电气株式会社在横滨地球科学学院的地球模拟器。它由640个特别设计的8阶矢量处理器根据NEC SX-6架构所组成的丛集，使用Unix的修改版本。
在地球模拟器之前，最快的超级计算机是美国加州罗兰士利物摩亚国家实验室的ASCI White，它的冠军位置维持了2.5年。
类超级运算

日本富士通和理化学研究所開發的超级计算机京，已於2019年8月30日退役
某些分布式运算把丛集超级运算推至极限。例如SETI@home计划现在平均有667.716 TeraFLOPS运算能力。[27].
2009年4月，Folding@home声称拥有超過8PFLOPS运算能力。[28]
GIMPS运算能力也高达18TFLOPS。
Google的搜寻引擎系统Google數據中心总处理能力界乎于126及316TFLOPS之间。Tristan Louis估计这个系统等于32000至79000台双2 GHzXeon计算机[29]。由于散热问题，Google的搜寻引擎系统应该属于网格运算。
超級電腦時間線
主条目：list of fastest computers
年份	國家	超級電腦名稱	每秒浮點運算次數	地點
1942年	 美國	阿塔纳索夫-贝瑞计算机	30 OPS	美國爱荷华州立大学
 英国	電信研究機構Heath Robinson	200 OPS	英國布萊切利園
1944年	 英国	湯米·佛勞斯巨人计算机	5 kOPS	英國Dollis Hill Post Office Research Station
1946年	 美國	宾夕法尼亚大学電子數值積分計算機	100 kOPS	美國馬里蘭州戰爭部阿伯丁試基地
1954年	 美國	國際商業機器公司NORC	67 kOPS	美國維珍妮亞州海軍試驗基地
1956年	 美國	麻省理工学院TX-0	83 kOPS	美國麻省理工學院
1958年	 美國	國際商業機器公司AN/FSQ-7作战指挥中央系统	400 kOPS	美國空軍23號基地
1960年	 美國	通用自動計算機UNIVAC LARC	250 kFLOPS	美國加州勞倫斯利佛摩國家實驗室
1961年	 美國	IBM 7030 Stretch	1.2 MFLOPS	美國新墨西哥州洛斯阿拉莫斯國家實驗室
1964年	 美國	CDC 6600	3 MFLOPS	美國加州勞倫斯利佛摩國家實驗室
1969年	 美國	CDC 7600	36 MFLOPS
1974年	 美國	CDC STAR-100	100 MFLOPS
1975年	 美國	巴勒斯ILLIAC IV	150 MFLOPS	美國加州艾姆斯研究中心
1976年	 美國	克雷1號	250 MFLOPS	美國新墨西哥州洛斯阿拉莫斯國家實驗室
1981年		CDC Cyber 205	400 MFLOPS	（世界很多地方）
1983年	 美國	克雷X-MP/4	941 MFLOPS	美國新墨西哥州洛斯阿拉莫斯國家實驗室，波音公司
1984年	 蘇聯	M-13计算机	2.4 GFLOPS	蘇聯莫斯科计算机科學研究學院
1985年	 美國	Cray-2/8	3.9 GFLOPS	美國加州勞倫斯利佛摩國家實驗室
1989年	 美國	ETA10-G/8	10.3 GFLOPS	美國佛羅里達大學
1990年	 日本	日本電氣NEC SX-3/44R	23.2 GFLOPS	日本府中市NEC府中廠
1993年	 美國	思維機器公司Connection Machine-5/1024	65.5 GFLOPS	美國新墨西哥州洛斯阿拉莫斯國家實驗室；美國國家安全局
 日本	富士通Numerical Wind Tunnel	124.50 GFLOPS	日本航空宇宙技术研究所
 美國	英特尔Intel Paragon XP/S 140	143.40 GFLOPS	美國桑迪亚国家实验室
1994年	 日本	富士通Numerical Wind Tunnel	170.40 GFLOPS	日本航空宇宙技术研究所
1996年	 日本	日立製作所Hitachi SR2201/1024	220.4 GFLOPS	日本東京大學
 日本	日立製作所/築波大學 CP-PACS/2048	368.2 GFLOPS	日本築波市築波大學電算物理中心
1997年	 美國	英特尔ASCI Red/9152	1.338 TFLOPS	美國桑迪亚国家实验室
1999年	 美國	英特尔ASCI Red/9632	2.3796 TFLOPS
2000年	 美國	國際商業機器公司ASCI White	7.226 TFLOPS	美國加州勞倫斯利佛摩國家實驗室
2002年	 日本	日本電氣地球模擬器	35.86 TFLOPS	海洋研究开发机构
2004年	 美國	國際商業機器公司藍色基因/L	70.72 TFLOPS	美國能源部；國際商業機器公司
2005年	 美國	136.8 TFLOPS	美國能源部/NNSA/LLNL
 美國	280.6 TFLOPS
2007年	 美國	478.2 TFLOPS
2008年	 美國	國際商業機器公司走鹃	1.026 PFLOPS	美國新墨西哥州洛斯阿拉莫斯國家實驗室
 美國	1.105 PFLOPS
2009年	 美國	橡樹嶺國家實驗室美洲虎	1.759 PFLOPS	美國橡樹嶺國家實驗室
2010年	 中国	天河一號	2.566 PFLOPS	中国天津国家超级计算天津中心
2011年	 日本	RIKEN 京（K-Computer）	10.51PFLOPS	日本国立理化学研究所
2012年	 美國	國際商業機器公司藍色基因/Q	16.32475PFLOPS	美國勞倫斯利福摩爾國家實驗室
2012年11月13日	 美國	橡樹嶺國家實驗室泰坦	17.59PFLOPS	美國橡樹嶺國家實驗室
2013年	 中国	天河二号	33.86 PFLOPS	中国广州国家超级计算广州中心
2016年	 中国	神威·太湖之光	93.01 PFLOPS	中国无锡国家超级计算无锡中心
2018年	 美國	高峰	122.3 PFLPOS	美国能源部所属实验室
2020年	 日本	富岳	415.53 PFLPOS	日本神戶市中央區理化學研究所RIKEN電腦科學中心（R-CCS）
2022年	 美國	Frontier	1.102 EFLOPS	美国能源部所属实验室
专用超级计算机
专用超级计算机都是针对单一问题而开发的计算机。这些计算机都使用专门编程的FPGA晶片及超大型密集晶片，纵然牺牲普遍性也要提高成本效能比率。它们被用于天文物理学及密码破解之上。

例子：

深蓝，专门用于分析国际象棋
GRAPE，天文物理
Deep Crack，DES解码器
科幻中的超级计算机
Matrix-「母體」是電影《駭客任務》中，由機器所創造出的一個模擬環境，用以控制人類，並從人類身上吸取能源。
SkyNet-「天網」是電影《魔鬼終結者》中美國軍方所開發具有人工智慧的超級计算机，但後來它具有自我意識而以全人類為敵。
ARIIA-「愛莉亞」是電影《鷹眼》中美國軍方所開發具有人工智慧的超級计算机，但後來它以自我威脅判斷而決心消滅美國既有領導階層。
V.I.K.I.-「薇琪」是電影《機械公敵》中由美國USR公司所開發具有人工智慧的超級计算机，但後來它以自我學習認定人類有自毀傾向，必須消滅所有威脅改由機器人監護才會有未來。
MAGI-「麥棋」是動漫《新世紀福音戰士》中，設立於NERV總部由三台主機組成的超級计算机。MAGI是古代三賢人的稱呼，他們是耶穌誕生的時候贈送耶穌禮物的東方三賢人。與使徒的對戰中，用以判斷使徒的降落點與分析使徒弱點，提供攻擊方針以及成功機率做參考數值。特別的是將三個不同的人格加入了三個主機當中，分別是科學家、母親、女性，在理性的計算之外也擬人的加入性格作為判斷的依據。當判斷有衝突時，三賢人系統會以投票機制做最後定奪。
HAL 9000-《2001年太空漫遊》中主角鮑曼所乘搭的太空船發現號的主機，被安裝了可以在必要時殺死乘員的功能。
TRANSLTR是丹·布朗（Dan Brown）的小說-《數位密碼》中美國國家安全局所暗中開發的超級计算机，主要用來監聽網際網路封包，破解一切可能對國家安全造成威脅的加密訊息，包括加密的電子郵件，但是它的存在不被政府所承認。
Veda-「吠陀」是日本动漫《機動戰士GUNDAM 00》中由雪儿·亚克斯迪卡（Chall Acustica）所整合的量子型计算机，由天人组织（Celestial Being）所使用，连接上地球所有網路，瞬间获得任何资讯，计算出预算方案。能与所谓“变革者”（Innovator）及原始变革者以脑量子波为媒介进行同步连接。
X.A.N.A，来自动漫Code Lyoko一台有人工智能的超级计算机，原用于计算，后用与摧毁军事机密，有倒转时空的能力。他的发明者后来发现此功能后不断使用，导致X.A.N.A不断自我升级。最后X.A.N.A通过计算得出结论：主宰地球。于是不断发动X.A.N.A的环境平台『Lyoko』裡的圆塔（开启后可用于计算使用并能实现虚拟事物现实化）通过电缆对人类进行破坏。后来它能够实体化，把『lyoko』删除了，但是被潜伏在世界上其他超级计算机裡的发明者发回了『Lyoko』原资料，『Lyoko』才得以重建。
树状图设计者，来自日本动漫《魔法禁书目录》和《科學超電磁砲》中以分析气象资料为借口，搭载于织女星一号卫星上的超级计算机；每月会运算一次地球上所有空气粒子运动，可一次运算一个月的天气；其他日子就用来对学园都市的许多研究进行科研运算。在《魔法禁书目录》中被茵蒂克丝的魔法在太空中击毁，而其核心被回收之后被一方通行彻底摧毁。
注释
 英语原文為HVAC，即「heating, ventilation, and air conditioning」的首字母縮略字，中文直譯為「加熱、通風、空調」，是建築技術領域的一個子領域，這裡依照實際情形，略作「通風空調」，因為超级计算机運作時對加熱的要求顯然不高。
參考文獻
 中国超级计算机重返世界之巅 互联网档案馆的存檔，存档日期2013-06-22.，亚太日报，2013年6月17日
 （繁體中文）引入全球及區域譜模式作季度預報 (PDF). 香港天文台. 2007年1月. （原始内容存档 (PDF)于2011-11-03）.
 （简体中文）行星流體動力學大規模計算的性能測試與分析 （页面存档备份，存于互联网档案馆）
 （中文）GPU加速計算功能應用 (MP4). 上海汽車工業（集團）總公司. 2011年12月. （原始内容存档于2012-01-18）.
 （简体中文）基于延迟隐藏因子的GPU计算模型 (A GPU Computational Model Based on Latency Hidden Factor) （页面存档备份，存于互联网档案馆）
 （简体中文）周龍，殷紅武，朱建濤. 輕量級核心在HPC中的應用現狀研究: p. 4. 2009-09-10.
 （英文）Software Architecture of the Light Weight Kernel, Catamount （页面存档备份，存于互联网档案馆）
 （英文）Compute Node Linux: New Frontiers in Compute Node Operating System 互联网档案馆的存檔，存档日期2012-02-12.
 （英文）IBM System Blue Gene Solution: Application Development （页面存档备份，存于互联网档案馆）
 （英文）Message Passing Interface (MPI) （页面存档备份，存于互联网档案馆）
 （英文）OpenMP （页面存档备份，存于互联网档案馆）
 （英文）Kaufmann, Morgan. Optimizing Compilers for Modern Architectures: A Dependence-based Approach. 2001. ISBN 978-1558602861.
 （英文）A Study of loop nest structures and locality in scientific programs （页面存档备份，存于互联网档案馆）
 （英文）Code and data transformations for cache locality and parallelism （页面存档备份，存于互联网档案馆）
 （英文）Open64 Compiler Whirl Intermediate Representation （页面存档备份，存于互联网档案馆）
 （英文）An Incomplete Survey of Compiler Technology at the IBM Toronto Laboratory （页面存档备份，存于互联网档案馆）
 （简体中文）BLAS庫在多核處理器上的性能測試與分析 （页面存档备份，存于互联网档案馆）
 （英文）Anatomy of High-Performance Matrix Multiplication 互联网档案馆的存檔，存档日期2010-06-14.
 （英文）Innovation Impact: The IBM MASS Libraries: High-Performance Processor-Tuned Mathematical Functions （页面存档备份，存于互联网档案馆）
 （英文）Lustre Publications （页面存档备份，存于互联网档案馆）
 （英文）TOP500 Statistics 互联网档案馆的存檔，存档日期2012-11-02.
 （英文）SC'11 Cisco booth demo: Open MPI over Linux VFIO （页面存档备份，存于互联网档案馆）
 （英文）TOP500 Supercomputing Sites （页面存档备份，存于互联网档案馆）
 November 2017 | TOP500 Supercomputer Sites. www.top500.org. [2017-11-24]. （原始内容存档于2020-06-17） （英语）.
 Eijkhout, Victor. Introduction to High Performance Scientific Computing (PDF). 2011: Page 9 [2012-01-02]. ISBN 978-1-257-99254-6. （原始内容 (PDF)存档于2019-09-19）.
 AMD 與美國能源局橡樹嶺實驗室打造的「Frontier」超級電腦 擊敗日本 Arm 架構超級電腦「富岳」 奪最快頭銜. [2022-06-01]. （原始内容存档于2022-05-31）.
 SETI@Home积分一览. [2010-08-28]. （原始内容存档于2011-07-03）.
 Folding@Home. [2010-08-28]. （原始内容存档于2012-09-21）.
 How many Google machines. TNL.net. [2010-08-28]. （原始内容存档于2008-07-24）.
外部链接
	维基共享资源中相关的多媒体资源：超级计算机
超级计算资源
TOP500 超级计算机列表 （页面存档备份，存于互联网档案馆）
中國超級計算機行業
超级计算中心及组织
（简体中文） 上海超級計算中心
（繁體中文）国家高速网路与计算中心 （页面存档备份，存于互联网档案馆）——位于台湾新竹市，是中华民国国家实验研究院的附属机构。
（英文） 勞倫斯利福摩爾國家實驗室 (LLNL)高性能計算主頁 （页面存档备份，存于互联网档案馆）——位於美國的勞倫斯利福摩爾國家實驗室
（英文） HPCx （页面存档备份，存于互联网档案馆）——英国超级计算机服务，由EPCC及Daresbury实验室营运
（简体中文） 国家超级计算无锡中心（神威·太湖之光）
参见
	计算机科学主题
	信息技术主题
icon	工程主题
超级计算的历史和相关概念
貝奧武夫機群
分布式计算
快闪党电脑
网格运算
运算历史
并行计算
其他计算机类型
主机
量子计算机
微型计算机
小型计算机
大型计算机
超级计算机公司及产品
克雷研究公司
富士通
星盈科技
Groupe Bull（法国公司，曾宣称制造欧洲最高性能的超级计算机）
IBM
NEC计算机科学（英語：Computer science，有时缩写为CS）是系统性研究信息与计算的理论基础以及它们在计算机系统中如何实现与应用的实用技术的学科。[7] [8]它通常被形容为对那些创造、描述以及转换信息的算法处理的系统研究。计算机科学包含很多分支领域；有些强调特定结果的计算，比如计算机图形学；而有些是探討计算问题的性质，比如计算复杂性理论；还有一些领域專注于怎样实现计算，比如程式語言理論是研究描述计算的方法，而程式设计是应用特定的程式語言解决特定的计算问题，人机交互则是專注于怎样使计算机和计算变得有用、好用，以及随时随地为人所用。

有时公众会误以为计算机科学就是解决计算机问题的事业（比如信息技术），或者只是与使用计算机的经验有关，如玩游戏、上网或者文字处理。其实计算机科学所关注的，不仅仅是去理解实现类似游戏、浏览器这些软件的程序的性质，更要通过现有的知识创造新的程序或者改进已有的程序。[9]

尽管计算机科学（computer science）的名字里包含计算机这几个字，但实际上计算机科学相当数量的领域都不涉及计算机本身的研究。因此，一些新的名字被提议出来。某些重点大学的院系倾向于术语计算科学（computing science），以精确强调两者之间的不同。丹麦科学家彼得·諾爾建议使用术语"datalogy"，以反映这一事实，即科学学科是围绕着数据和数据处理，而不一定要涉及计算机。第一个使用这个术语的科学机构是哥本哈根大学计算科学系，该学院成立于1969年，彼得·諾爾便是第一任教授。这个术语主要被用于北欧国家。同时，在计算技术发展初期，《ACM通讯》建议了一些针对计算领域从业人员的术语：圖靈工程師（turingineer），turologist，流程圖人（flow-charts-man），應用元數學家（applied meta-mathematician）及應用認識論者（applied epistemologist）。[10] 三个月后在同样的期刊上，comptologist被提出，第二年又变成了hypologist。[11] 术语computics也曾经被提议过。在欧洲大陆，起源于信息（information）和数学或者自动（automatic）的名字比起源于计算机或者计算（computation）更常见，如informatique（法语），Informatik（德语），informatika（斯拉夫语族）。

著名计算机科学家艾兹赫尔·戴克斯特拉曾经指出：“计算机科学并不只是关于计算机，就像天文学并不只是关于望远镜一样。”（"Computer science is no more about computers than astronomy is about telescopes."）设计、部署计算机和计算机系统通常被认为是非计算机科学学科的领域。例如，研究计算机硬件被看作是计算机工程的一部分，而对于商业计算机系统的研究和部署被称为信息技术或者信息系统。然而，现如今也越来越多地融合了各类计算机相关学科的思想。计算机科学研究也经常与其它学科交叉，比如数学、工程学、认知科学和经济学等。

计算机科学被认为比其它科学学科与数学的联系更加密切，一些观察者说计算就是一门数学科学。[12] 早期计算机科学受数学研究成果的影响很大，如库尔特·哥德尔、艾伦·图灵、路莎·彼得，阿隆佐·邱奇等数学家的研究，这两个领域在某些学科，例如数理逻辑、范畴论、域理论和代数，也不断有有益的思想交流。


目录
1	历史
1.1	主要成就
2	哲学
3	计算机科学的领域
3.1	理論電腦科學
3.1.1	数据结构和算法
3.1.2	计算理论
3.1.3	信息论与编码理论
3.1.4	编程语言和编译器
3.1.5	形式化方法
3.2	计算机系统
3.2.1	计算机体系结构与计算机工程
3.2.2	操作系统
3.2.3	并发、并行与分布式系统
3.2.4	计算机网络
3.2.5	计算机安全和密码学
3.2.6	数据库
3.3	计算机应用技术
3.3.1	计算机图形学
3.3.2	科学计算
3.3.3	多媒体技术
3.3.4	人工智能
3.4	软件工程
4	学术界
4.1	会议
4.2	期刊
5	作为高等教育的二级专业
6	工业界
7	参见
8	参考文献
9	延伸阅读
10	外部链接
历史
主条目：计算机科学的历史
早期计算机科学建立的基础得追溯到最近电子计算机的发明。那些计算固定数值任务的机器，比如算盘，自古希腊时期即已存在，而用于加快计算的算法更是在算盘等古老的计算仪器发明之前就已被广泛使用。

Wilhelm Schickard在1623年设计了世界上第一台机械计算器，但没有完成它的建造。[13]布莱兹·帕斯卡在1642年设计并且建造了世界上第一台可以工作的机械计算器Pascaline。1673年，莱布尼兹开始了步进计算器的建造工作并于1694年竣工，他也因为记录了二进制系统而被认为是第一个计算机科学家和信息理论家。埃达·洛夫莱斯协助查尔斯·巴贝奇在维多利亚时代设计了差分机[14][15]。1900年左右，打孔机问世[16]。然而以上这些机器都局限在只能完成单个任务，或者充其量是所有可能任务的子集。

到了20世纪40年代，随着更新更强大的计算机器(如ABC计算机、电子数值积分计算机)被发明，术语“计算机”开始用于指代那些机器而不是它们的祖先。[17]计算机的概念变得更加清晰，它不仅仅用于数学运算，总的来说计算机科学的领域也扩展到了对于计算的研究。20世纪50年代至20世纪60年代早期，计算机科学开始被确立为不同种类的学术学科。[18] 世界上第一个计算机科学学位点由普渡大学在1962年设立。[19]随着实用计算机的出现，很多计算的应用都以它们自己的方式逐渐转变成了研究的不同领域。

虽然最初很多人并不相信计算机可能成为科学研究的领域，但是随后的50年里也逐渐被学术界认可。[20]IBM公司是那段时期计算机科学革命的参与者之一。在那段探索时期，IBM（International Business Machines的缩写）发布的IBM 704以及之后的IBM 709计算机被广泛使用。“不过，使用IBM电脑工作仍然是一件很沮丧的事情。如果你弄错了一条指令中的一个字母，程序将会崩溃，而你也得从头再来。”[20]20世纪50年代后期，计算机科学学科還在发展階段，这種問題在当时是一件很常見的事情。

随着时间的推移，计算机科学技术在可用性和有效性上都有显著提升。现代社会见证了计算机从仅仅由专业人士使用到被广大用户接受的重大转变。最初，计算机非常昂贵，要有效利用它们，某种程度上必须得由专业的计算机操作员来完成。然而，随着计算机变得普及和低廉，已经几乎不需要专人的协助，虽然某些时候援助依旧存在。

主要成就

德军在二战时用于加密通信的恩尼格玛密码机。恩尼格玛加密信息在布莱切利园被大量破译被认为是帮助盟军在二战中获胜的重要因素。[21]
虽然计算机科学被认定为一门正规学科的历史很短暂，但它对科学和社会做出了许多根本性的贡献ー事实上，计算机科学与电子学一样，是信息时代的奠基科学，也是資訊革命的驱动力，被视为继工业革命（公元1750-1850年）和新石器革命（公元前8000-5000年）之后人类技术进步的第三次重大飞跃。

这些贡献包括：

开启“數字化革命”，包括当今的信息时代和互联网。[22]
对计算和可计算性的形式定义，证明了存在计算上不可解及难解型问题。[23]
提出程式语言的概念，作為一种使用不同的抽象層次來精确表达處理程序的工具。[24]
在密码学领域，恩尼格玛密码机的破译被视为盟军在二战取得胜利的重要因素。[21]
科学计算让分析实际中非常复杂的过程和场景成为可能，可以完全借助软件来进行一些实验。同时也实现了对人类思想的深入研究，使得人类基因组计划绘制人类基因成为可能。[22] 还有探索蛋白质折叠的分布式计算项目Folding@home。
算法交易通过使用人工智能、机器学习和其他大规模的统计和数值方法，提高了金融市场的效率和流通性。[25] 高频率的算法交易也会加快波动性。[26]
计算机图形和電腦成像（CGI）在现代娱乐中无处不在，尤其是在电视、电影、广告、动画和视频游戏中。即便是没有用到CGI技术的电影，通常也是用数码相机拍摄，或者使用数字视频编辑器剪辑或后期处理过的。[27][28]
仿真各种过程，包括计算流體動力學、物理、电气和电子系统和电路，以及同人类居住地联系在一起的社会和社会形态（尤其是战争游戏，war games）。现代计算机能够对这些设计进行优化，如飞机设计。尤其在电气与电子电路设计中，SPICE软件对新的物理实现（或修改）设计具有很大帮助。[29] 它包含了针对集成电路的基本设计软件。[來源請求]
人工智能变得越来越重要，因为它变得更加高效和复杂。人工智能的应用有很多，其中一些可以在家里看到，比如機器人吸塵器。它也出现在视频游戏和现代战场上的无人机、反导弹系统和小队支援机器人中。[30]
人机交互将新颖的算法与设计策略相结合，可实现快速的人类绩效，低错误率，易于学习和高度满意度。研究人员利用人种学观察和自动化数据收集来了解用户需求，然后进行可用性测试来完善设计。关键的创新包括直接操纵、可选择的网页链接、触摸屏设计、移动应用程序和虚拟现实。
哲学
主条目：计算机科学的哲学
Peter Wegner提出计算机科学可以分成三个领域：数学、工程学、科學。Amnon H. Eden提议了三种范式应用于计算机科学的各个领域：[31]

“理性主义范式”，将计算机科学看作是数学的分支，在理论计算机科学中很流行，主要利用演绎推理。
“技术专家范式”，这类范式有着很明显的工程学倾向，尤其是在软件工程领域。
“科学范式”，人工智能的某些分支可以作为这类范式的代表（比如说对于人工生命的研究）。
计算机科学的领域
作为一个学科，计算机科学涵盖了从算法的理论研究和计算的极限，到如何通过硬件和软件实现计算系统。[32][33] CSAB（以前被叫做Computing Sciences Accreditation Board），由Association for Computing Machinery（ACM）和IEEE计算机协会（IEEE-CS）的代表组成[34]，确立了计算机科学学科的4个主要领域：计算理论，算法与数据结构，编程方法与编程语言，以及计算机组成与架构。CSAB还确立了其它一些重要领域，如软件工程，人工智能，计算机网络与通信，数据库系统，并行计算，分布式计算，人机交互，计算机图形学，操作系统，以及数值和符号计算。

理論電腦科學
主条目：理论计算机科学
广义的理论计算机科学包括经典的计算理论和其它專注于更抽象、逻辑与数学方面的计算。

数据结构和算法
�
(
�
2
)
O(n^{2})	Sorting quicksort anim.gif	Singly-linked-list.svg	SimplexRangeSearching.png	6n-graf.svg
算法分析	算法	数据结构	计算几何	图论
算法指定义良好的计算过程，它取一个或一组值作为输入，经过一系列定义好的计算过程，得到一个或一组输出。[35]算法是计算机科学研究的一个重要领域，也是许多其他计算机科学技术的基础。算法主要包括数据结构、计算几何、图论等。除此之外，算法还包括许多杂项，如模式匹配、部分数论等。

计算理论
主条目：计算理论
按照Peter J. Denning的说法，计算机科学的最根本问题是“什么能够被有效地自动化？”[12]计算理论的研究就是專注于回答这个根本问题，关于什么能够被计算，去实施这些计算又需要用到多少资源。为了试图回答第一个问题，递归论检验在多种理论计算模型中哪个计算问题是可解的。而计算复杂性理论则被用于回答第二个问题，研究解决一个不同目的的计算问题的时间与空间消耗。

著名的“P=NP?”问题，千禧年大奖难题之一，[36]是计算理论的一个开放问题。

DFAexample.svg	Wang tiles.svg	P = NP ?	GNITIRW-TERCES	Blochsphere.svg
自动机理论	递归论	计算复杂性理论	密码学	量子计算论
信息论与编码理论
主条目：信息论和编码理论
[icon]	此章节需要扩充。 (2013年1月)
信息论与信息量化相关，由克劳德·香农创建，用于寻找信号处理操作的根本极限，比如压缩数据和可靠的数据存储与通讯。编码理论是对编码以及它们适用的特定应用性质的研究。编码（code）被用于数据压缩，密码学，前向纠错，近期也被用于网络编码。研究编码的目的在于设计更高效、可靠的数据传输方法。

编程语言和编译器
主条目：编程语言理论
编程语言理论是计算机科学的一个分支，主要处理编程语言的设计、实现、分析、描述和分类，以及它们的个体特性。它属于计算机科学学科，既受影响于也影响着数学、软件工程和语言学。它是公认的计算机科学分支，同时也是活跃的研究领域，研究成果被发表在众多学术期刊，计算机科学以及工程出版物。

Γ
⊢
�
:
Int
\Gamma \vdash x:{\text{Int}}	Ideal compiler.png	Python add5 syntax.svg
类型论	编译器设计	程序设计语言
形式化方法
主条目：形式化方法
形式化方法是一种特别的基于数学的技术，用于软件和硬件系统的形式规范、开发以及驗證。在软件和硬件设计方面，形式化方法的使用动机，如同其它工程学科，是通过适当的数学分析便有助于设计的可靠性和健壮性的期望。但是，使用形式化方法会带来很高的成本，意味着它们通常只用于高可靠性系统，这种系统中安全或保安（security）是最重要的。对于形式化方法的最佳形容是各种理论计算机科学基础种类的应用，特别是计算机逻辑演算，形式语言，自动机理论和形式语义学，此外还有类型系统、代数数据类型，以及软件和硬件规范和验证中的一些问题。

计算机系统
计算机体系结构与计算机工程
主条目：计算机体系结构和计算机工程
计算机系统结构，或者数字计算机组织，是一个计算机系统的概念设计和根本运作结构。它主要侧重于CPU的内部执行和内存访问地址。这个领域经常涉及计算机工程和电子工程学科，选择和互连硬件组件以创造满足功能、性能和成本目标的计算机。

NOR ANSI.svg	Fivestagespipeline.png	SIMD.svg
数字电路	微架构	多处理机
操作系统
主条目：操作系统
操作系统是管理电脑硬件与软件资源的电脑程式，同时也是电脑系统的核心与基石。作业系统需要处理如管理与配置记忆体、决定系统资源供需的优先次序、控制输入与输出装置、操作网路与管理档案系统等基本事务。作业系统也提供一个让使用者与各电脑设备互动的操作介面。

并发、并行与分布式系统
主条目：并发性和分布式计算
并发性（concurrency）是系统的一种性质，这类系统可以同时执行多个可能互相交互的计算。一些数学模型，如Petri网、进程演算和PRAM模型，被建立以用于通用并发计算。分布式系统将并发性的思想扩展到了多台由网络连接的计算机。同一分布式系统中的计算机拥有自己的私有内存，它们之间经常交换信息以达到一个共同的目的。

计算机网络
主条目：计算机网络
计算机网络是管理遍及全球的计算机连接成的网络的计算机科学分支。

计算机安全和密码学
主条目：计算机安全和密码学
计算机安全是计算机技术的一个分支，其目标包括保护信息免受未经授权的访问、中断和修改，同时为系统的预期用户保持系统的可访问性和可用性。密码学是对于隐藏（加密）和破译（解密）信息的实践与研究。现代密码学主要跟计算机科学相关，很多加密和解密算法都是基于它们的计算复杂性。

数据库
主条目：数据库和数据库管理系统
数据库是为了更容易地组织、存储和检索大量数据。数据库由数据库管理系统管理，通过数据模型和查询语言来存储、创建、维护和搜索数据。

[icon]	此章节需要扩充。 (2013年1月)
计算机应用技术
计算机图形学
主条目：计算机图形学
计算机图形学是对于数字视觉内容的研究，涉及图像数据的合成和操作。它跟计算机科学的许多其它领域密切相关，包括计算机视觉、图像处理、计算几何与可视化，同时也被大量运用在特效和电子游戏。

科学计算
科学计算（或者计算科学）是关注构建数学模型和量化分析技术的研究领域，同时通过计算机分析和解决科学问题。在实际使用中，它通常是计算机模拟和计算等形式在各个科学学科问题中的应用。

Lorenz attractor yb.svg	Quark wiki.jpg	Naphthalene-3D-balls.png	1u04-argonaute.png
数值分析	计算物理学	计算化学	生物信息学
多媒体技术
多媒体技术是指通过计算机对文字、数据、图形、图像、动画、声音等多种媒体信息进行综合处理和管理，使用户可以通过多种感官与计算机进行实时信息交互的技术，又称为计算机多媒体技术。

人工智能
主条目：人工智能
这个计算机科学分支旨在创造可以解决计算问题，以及像动物和人类一样思考与交流的人造系统。无论是在理论还是应用上，都要求研究者在多个学科领域具备细致的、综合的专长，比如应用数学，逻辑，符号学，电机工程学，精神哲学，神经生理学和社会智力，用于推动智能研究领域，或者被应用到其它需要计算理解与建模的学科领域，如金融或是物理科学。人工智能领域开始变得正式源于Alan Turing这位人工智能先驱提出了图灵试验，以回答这样一个终极问题：“计算机能够思考吗？”[37]

Nicolas P. Rougier's rendering of the human brain.png	Human eye, rendered from Eye.png	Corner.png
机器学习	计算机视觉	图像处理
KnnClassification.svg	Julia iteration data.png	Sky.png
模式识别	数据挖掘	演化计算
Neuron.svg	English letters (alphabet).png	HONDA ASIMO.jpg
知识表示和自动推理	自然语言处理	机器人学
软件工程
主条目：软件工程
软件工程是对于设计、实现和修改软件的研究，以确保软件的高质量、适中的价格、可维护性，以及能够快速构建。它是一个系统的软件设计方法，涉及工程实践到软件的应用。

计算机科学和软件工程的关系是一个有争议的话题，随后关于什么是“软件工程”，计算机科学又该如何定义的争论使得情况更加混乱。David Parnas从其它工程和科学学科之间的关系得到启示，宣称计算机科学的主要重点总的来说是研究计算的性质，而软件工程的主要重点是具体的计算设计，以达到实用的目的，这样便构成了两个独立但又互补的学科。[38]

[icon]	此章节需要扩充。 (2013年1月)
学术界
会议
更多信息：计算机科学会议列表
SIGIR(Special Interest Group on Information Retrieval)

KDD(Knowledge Discovery and Data Mining)

AAAI(the Association for the Advance of Artificial Intelligenc)

ACL(Annual Meeting of the Association for Computational Linguistics)

NAACL(The North American Chapter of the Association for Computational Linguistics) 其为ACL的北美分会

EMNLP(Conference on Empirical Methods in Natural Language Processing)

IJCAI( International Joint Conference on Artificial Intelligence)

期刊
更多信息：Category:计算机科学期刊
[icon]	此章节需要扩充。 (2013年1月)
作为高等教育的二级专业

印度一個二手電腦書攤
一些教授计算机科学的大学[哪個／哪些？]主要进行计算和算法推理的研究。其中包括计算理论、算法分析、形式化方法、并行理论、数据库、计算机图形学以及系统分析等。通常也教授程序设计，但仅仅将它看作是支持计算机科学其它领域的媒介，而不是高级研究的重心。

其它一些学院、大学、中学以及职业培训[哪個／哪些？]的计算机科学课程则主要侧重于训练高级编程，而不是算法和计算理论。这些课程着重教授那些对于软件工业很重要的技能。像这样的计算机编程过程通常被叫做软件工程。

然而，尽管计算机科学专业日益推动着美国经济，但是计算机科学教育依然不存在大多数美国K-12课程中。2010年10月由ACM（页面存档备份，存于互联网档案馆）和计算机科学教师协会（CSTA）（页面存档备份，存于互联网档案馆）共同发表了一篇名为“Running on Empty: The Failure to Teach K-12 Computer Science in the Digital Age”的报告，文中揭示了仅有14个州通过了有意义的高中计算机科学教育标准。同时，仅有9个州将高中计算机科学课程算作毕业要求的核心学科。配合“Running on Empty”这篇文章，一个新的无党派宣传联盟：Computing in the Core（CinC）被建立，以影响联邦和政府政策，比如Computer Science Education Act（页面存档备份，存于互联网档案馆）要求政府拨款以制定计划完善计算机科学教育及支持计算机科学教师。

在中国，“计算机科学”或“计算机科学与技术”是工科（一级门类）下的二级专业。一般可细分为三级专业：

计算机软件：围绕着软件开发、软件工程、编程语言等
计算机应用：计算机的各种应用算法、技术。如：模式识别、计算视觉、计算机图形学等等。
计算机体系结构：关于计算机或计算机信息系统的“硬件”。
工业界
[icon]	此章节需要扩充。 (2013年1月)
参见
	计算机科学主题
参见基本的计算机科学主题列表以获取更详尽的列表。
未解決的計算機科學問題
计算机科学家的学术家谱
计算机科学家
计算
计算机科学的历史
中国计算机科学大事年表
信息学
学术计算机科学系列表
计算机科学会议列表
计算机科学家列表
计算机科学开放问题列表
计算机科学出版物列表
计算机科学先驱列表
软件工程主题列表
计算机科学的哲学
计算机领域中的女性
计算机
计算尺
算盤
語言
科学
科学家
算籌
科學會議
計算機遊戲
按揭計算機
計算機程式
CASIO 計算機
計算機工程
桌上型計算機
参考文献
 存档副本. [2020-11-28]. （原始内容存档于2021-04-02）.
 存档副本. [2020-11-28]. （原始内容存档于2021-03-17）.
 存档副本. [2020-11-28]. （原始内容存档于2021-02-23）.
 存档副本. [2020-11-28]. （原始内容存档于2021-04-02）.
 存档副本. [2020-11-28]. （原始内容存档于2021-04-02）.
 电脑科学学士（荣誉）. [2021-01-21]. （原始内容存档于2021-04-02）.
 Comer, D. E.; Gries, David; Mulder, Michael C.; Tucker, Allen; Turner, A. Joe; Young, Paul R. /Denning. Computing as a discipline. Communications of the ACM. 1989-01-01, 32 (1): 9–23. ISSN 0001-0782. doi:10.1145/63238.63239. Computer science and engineering is the systematic study of algorithmic processes-their theory, analysis, design, efficiency, implementation, and application-that describe and transform information.
 Wegner, P. Research paradigms in computer science. Proceedings of the 2nd international Conference on Software Engineering. San Francisco, California, United States: IEEE Computer Society Press, Los Alamitos, CA. October 13–15, 1976. Computer science is the study of information structures
 "Common myths and preconceptions about Cambridge Computer Science" Computer Science Department （页面存档备份，存于互联网档案馆）, University of Cambridge
 Communications of the ACM 1(4):p.6
 Communications of the ACM 2(1):p.4
 Denning, P.J. Computer Science: The Discipline (PDF). Encyclopedia of Computer Science. 2000 [2010-12-20]. （原始内容 (PDF)存档于2006-05-25）.
 Nigel Tout. Calculator Timeline. Vintage Calculator Web Museum. 2006 [2006-09-18]. （原始内容存档于2011-07-17）.
 Science Museum - Introduction to Babbage. [2006-09-24]. （原始内容存档于2006-09-08）.
 A Selection and Adaptation From Ada's Notes found in "Ada, The Enchantress of Numbers," by Betty Alexandra Toole Ed.D. Strawberry Press, Mill Valley, CA. [2006-05-04]. （原始内容存档于2006-02-10）.
 IBM Punch Cards in the U.S. Army. [2006-09-24]. （原始内容存档于2016-05-31）.
 Association for Computing Machinery (ACM) 建立于1947.
 CAM.ac.uk. [2010-11-20]. （原始内容存档于2007-09-03）.
 Computer science pioneer Samuel D. Conte dies at 85 （页面存档备份，存于互联网档案馆） July 1, 2002
 Levy, Steven. Hackers: Heroes of the Computer Revolution. Doubleday. 1984. ISBN 0-385-19195-2.
 David Kahn, The Codebreakers, 1967, ISBN 0-684-83130-9.
 Computer Science : Achievements and Challenges circa 2000 (PDF). [January 11, 2007]. （原始内容 (PDF)存档于2006-09-11）.
 Constable, R.L. Computer Science: Achievements and Challenges circa 2000 (PDF). March 2000 [2010-12-20]. （原始内容存档 (PDF)于2010-07-21）.
 Abelson, H.; G.J. Sussman with J. Sussman. Structure and Interpretation of Computer Programs 2nd. MIT Press. 1996. ISBN 978-0-262-01153-2. The computer revolution is a revolution in the way we think and in the way we express what we think. The essence of this change is the emergence of what might best be called procedural epistemology – the study of the structure of knowledge from an imperative point of view, as opposed to the more declarative point of view taken by classical mathematical subjects.
 Black box traders are on the march. The Telegraph. August 26, 2006 [2021-05-17]. （原始内容存档于2008-06-21）.
 Kirilenko, Andrei A.; Kyle, Albert S.; Samadi, Mehrdad; Tuzun, Tugkan. The Impact of High Frequency Trading on an Electronic Market (PDF). Papers.ssrn.com. 2017-01-06 [2019-10-02]. SSRN 1686004 可免费查阅. doi:10.2139/ssrn.1686004. （原始内容存档 (PDF)于2019-10-13）.
 Maly, Timy. How Digital Filmmakers Produced a Gorgeous Sci-Fi Movie on a Kickstarter Budget. Wired. 2013-01-30 [November 24, 2015]. （原始内容存档于2020-03-27）.
 Matthau, Charles. How Tech Has Shaped Film Making: The Film vs. Digital Debate Is Put to Rest. Wired. 2015-01-08 [November 24, 2015]. （原始内容存档于2020-03-27）.
 Muhammad H. Rashid, 2016. SPICE for Power Electronics and Electric Power. CRC Press. p. 6. ISBN 978-1-4398-6047-2.
 Marko B. Popovic, 2019. Biomechatronics. Elsevier Science. p. 501. ISBN 978-0-12-813041-4.
 Eden, Amnon H. Three Paradigms of Computer Science. Minds and Machines. 2007-07-01, 17 (2): 135–167 [2018-03-03]. ISSN 0924-6495. doi:10.1007/s11023-007-9060-8. （原始内容存档于2017-12-14） （英语）.
 Computing Sciences Accreditation Board. Computer Science as a Profession. 28 May 1997 [2010-05-23]. （原始内容存档于2008-06-17）.
 Committee on the Fundamentals of Computer Science: Challenges and Opportunities, National Research Council. Computer Science: Reflections on the Field, Reflections from the Field. National Academies Press. 2004 [2010-12-20]. ISBN 978-0-309-09301-9. （原始内容存档于2011-02-18）.
 CSAB, Inc.. [2010-12-20]. （原始内容存档于2019-01-20）.
 《算法导论》1.1［美］Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, Clifford Stein著, 潘金贵、顾铁成、李成法、叶懋译，机械工业出版社 2011年7月第1版
 Clay Mathematics Institute （页面存档备份，存于互联网档案馆） P=NP
 Alan Turing. Computing Machinery and Intelligence. Mind. 1950年10月: 433–460. doi:10.1093/mind/LIX.236.433.
 Parnas, David Lorge. Software engineering programmes are not computer science programmes. Annals of Software Engineering. 1998-03-01, 6 (1-4): 19–37 [2018-03-03]. ISSN 1022-7091. doi:10.1023/a:1018949113292. （原始内容存档于2018-06-03） （英语）. Rather than treat software engineering as a subfield of computer science, I treat it as an element of the set, Civil Engineering, Mechanical Engineering, Chemical Engineering, Electrical Engineering, [...]
延伸阅读
概述
Tucker, Allen B. Computer Science Handbook 2nd. Chapman and Hall/CRC. 2004. ISBN 158488360X.
"Within more than 70 chapters, every one new or significantly revised, one can find any kind of information and references about computer science one can imagine. [...] all in all, there is absolute nothing about Computer Science that can not be found in the 2.5 kilogram-encyclopaedia with its 110 survey articles [...]." (Christoph Meinel, Zentralblatt MATH)
van Leeuwen, Jan. Handbook of Theoretical Computer Science. The MIT Press. 1994. ISBN 0262720205.
"[...] this set is the most unique and possibly the most useful to the [theoretical computer science] community, in support both of teaching and research [...]. The books can be used by anyone wanting simply to gain an understanding of one of these areas, or by someone desiring to be in research in a topic, or by instructors wishing to find timely information on a subject they are teaching outside their major areas of expertise." (Rocky Ross, SIGACT News)
Ralston, Anthony; Reilly, Edwin D.; Hemmendinger, David. Encyclopedia of Computer Science 4th. Grove's Dictionaries. 2000 [2011-06-16]. ISBN 156159248X. （原始内容存档于2020-06-08）.
"Since 1976, this has been the definitive reference work on computer, computing, and computer science. [...] Alphabetically arranged and classified into broad subject areas, the entries cover hardware, computer systems, information and data, software, the mathematics of computing, theory of computation, methodologies, applications, and computing milieu. The editors have done a commendable job of blending historical perspective and practical reference information. The encyclopedia remains essential for most public and academic library reference collections." (Joe Accardin, Northeastern Illinois Univ., Chicago)
论文选集
Knuth, Donald E. Selected Papers on Computer Science. CSLI Publications, Cambridge University Press. 1996.
"Covering a period from 1966 to 1993, its interest lies not only in the content of each of these papers — still timely today — but also in their being put together so that ideas expressed at different times complement each other nicely." (N. Bernard, Zentralblatt MATH)
文章
Peter J. Denning. Is computer science science?, Communications of the ACM, April 2005.
Peter J. Denning, Great principles in computing curricula, Technical Symposium on Computer Science Education, 2004.
Research evaluation for computer science, Informatics Europe report. Shorter journal version: Bertrand Meyer, Christine Choppy, Jan van Leeuwen and Jorgen Staunstrup, Research evaluation for computer science, in Communications of the ACM, vol. 52, no. 4, pp. 31-34, April 2009.
课程与分类
Association for Computing Machinery. 1998 ACM Computing Classification System. 1998.
Joint Task Force of Association for Computing Machinery (ACM), Association for Information Systems (AIS) and IEEE Computer Society (IEEE-CS). Computing Curricula 2005: The Overview Report. September 30, 2005.
Norman Gibbs, Allen Tucker. "A model curriculum for a liberal arts degree in computer science". Communications of the ACM, Volume 29 Issue 3, March 1986.
外部链接
从维基百科的姊妹计划
了解更多有关
“计算机科学”的内容
搜索维基词典	维基词典上的字词解释
搜索维基共享资源	维基共享资源上的多媒体资源
搜索维基新闻	维基新闻上的新闻
搜索维基语录	维基语录上的名言
搜索维基文库	维基文库上的原始文献
搜索维基教科书	维基教科书上的教科书和手册
搜索维基学院	维基学院上的學習资源
开放式目录计划中和计算机科学相关的内容
Scholarly Societies in Computer Science（页面存档备份，存于互联网档案馆）
Best Papers Awards in Computer Science since 1996（页面存档备份，存于互联网档案馆）
Photographs of computer scientists（页面存档备份，存于互联网档案馆） by Bertrand Meyer
参考文献和学术搜索引擎
CiteSeerx（页面存档备份，存于互联网档案馆）: search engine, digital library and repository for scientific and academic papers with a focus on computer and information science.Arthur H. Robinson

Article
Talk
Read
Edit
View history

Tools
From Wikipedia, the free encyclopedia
For the British geographer, see Adrian Henry Wardle Robinson.
Arthur H. Robinson
ArthurH.RobinsonImage.jpg
Born	January 5, 1915
Montreal, Quebec, Canada
Died	October 10, 2004 (aged 89)
Madison, Wisconsin, U.S.
Arthur H. Robinson (January 5, 1915 – October 10, 2004) was an American geographer and cartographer,[1] who was professor in the Geography Department at the University of Wisconsin–Madison from 1947 until he retired in 1980. He was a prolific writer and influential philosopher on cartography, and one of his most notable accomplishments is the Robinson projection of 1961.

Biography
Arthur H. Robinson was born in Montreal, Quebec, Canada, to American parents, James Howard Robinson and Elizabeth (Peavey) Robinson. He lived in Great Britain while he was young, and received his post-secondary education in the United States. His undergraduate work was done at Miami University in Oxford, Ohio, obtaining a B.A. degree in 1936. During his undergraduate work he became especially interested in cartography, and received some practice drawing maps for faculty textbooks[2] while earning a master's degree in geography from the University of Wisconsin–Madison in 1938, and he earned his Ph.D. degree from Ohio State University in 1947.[3] While at Ohio State, Robinson worked to solve problems in the Map communication model.

During World War II, Robinson served as director of the map division of the Office of Strategic Services (OSS). In 1941, when Robinson joined OSS, there were no cartographers as we know them today. Robinson engaged geographers with some interest in mapping and the group developed their techniques on the job.[4] Led by Robinson, the OSS cartographers designed a massive 50-inch globe for President Franklin Roosevelt, which became known as "The President's Globe."[5] A copy of the globe was given to Winston Churchill as a gift and a third globe was provided for the use of George Marshall and Henry Stimson.[6] While serving with the OSS, Robinson oversaw the creation of 5,000 hand-drawn maps and attended the Allied conferences at Quebec and Cairo in 1943 and in 1944, he served as chief U.S. map officer. For his efforts Robinson received the Legion of Merit from the United States Army in 1946.[7]


President Roosevelt studies the 50-inch globe produced by Arthur Robinson and the OSS
In 1947 Robinson subsequently joined the geography department at the University of Wisconsin–Madison, where he spent his career in academia and research. Robinson sought to establish cartography as a recognized discipline and ultimately the university granted both undergraduate and master's degrees in cartography.[4] The Wisconsin cartography program has conferred more than 100 masters and 20 doctoral degrees, and many of the doctoral recipients created respected cartography programs at other universities.[8] Today the map library at the University of Wisconsin–Madison is named in his honor.[9]


Detail of the cartouche on "The President's Globe"
Robinson served as president of the International Cartographic Association (1972–76), and as vice president and president of the Association of American Geographers. He was awarded the Carl Mannerfelt Gold Medal by the International Cartographic Association in 1980.

Personal life
Robinson married Mary Elizabeth Coffin (1910–-1992), daughter of John R. Coffin and Bessie Morris Coffin, on December 23, 1938, in Franklin County, Ohio. They had two children, a son and a daughter. After the death of his first wife, Robinson remarried in 1993. His second wife was Martha Elizabeth Rodabaugh Phillips (1914–2010), a widow, with whom he had attended school in Oxford, Ohio.

Work
Robinson was a prolific writer and influential philosopher on cartography:[7] According to Robinson,“the aim of cartographic design is to present the geographical data in such a fashion that the map, as a whole, appears as an integrated unit and so that each item included is clear, legible, and neither more nor less prominent than it should be.”[10] Like Richard Edes Harrison, another successful wartime cartographer, Robinson warned against the dangers of blindly accepting conventions in map design, such as always putting north at the top of the map. Robinson wrote that neither logic nor educational value required placing north at the top of the map.[11]

In The Look of Maps (1952) which was based on his doctoral research, Robinson urged cartographers to consider the function of a map as an integral part of the design process.
In the text In The Nature of Maps (1976), Robinson and co-author Barbara Bartz Petchenik created the term map percipient, a map user who interacts with a map in a discerning way and not merely as a casual observer. The authors stressed that ... the nature of the map as an image and the manner in which it functions as a communication device between the cartographer and percipient need much deeper consideration and analysis than they have yet received.[12]
Robinson also co-authored a widely used textbook, Elements of Cartography, the sixth and last edition of which was published in 1995.
Robinson projection

The Robinson projection is an example of a pseudocylindrical projection.
One of Robinson's most notable accomplishments is the Robinson projection. In 1961, Rand McNally asked Robinson to choose a projection for use as a world map that, among other criteria, was uninterrupted,[13] had limited distortion, and was pleasing to the eye of general viewers.[14] Robinson could not find a projection that satisfied the criteria, so Rand McNally commissioned him to design one.

Robinson proceeded through an iterative process to create a pseudo-cylindrical projection that intends to strike a compromise between distortions in areas and in distances, in order to attain a more natural visualization. The projection has been widely used since its introduction. In 1988, National Geographic adopted it for their world maps but replaced it in 1998 with the Winkel tripel projection.

See also
	Biography portal
	World War II portal
flag	United States portal
Rand McNally
Nicolas Auguste Tissot
David Woodward
Geographers on Film
Publications
Robinson produced over 60 articles for professional publications, as well as fifteen books and monographs.[7] Books:

1952. The Look of Maps. Madison:University of Wisconsin Press.[15]
1976. The Nature of Maps. With B. Petchenik. Chicago: The University of Chicago Press.
1982. Early Thematic Mapping in the History of Cartography.
1995. Elements of Cartography (6th Edition). With A. Robinson, J. Morrison, P. Muehrke, A. Kimmerling & S. Guptill. New York: Wiley.
References

Wikiquote has quotations related to Arthur H. Robinson.
 Wilford, John Noble (November 15, 2004). "Arthur H. Robinson, 89, Geographer Who Reinterpreted World Map, Dies". NY Times.
 Robinson legacy Archived February 16, 2013, at the Wayback Machine Retrieved September 2, 2008.
 Gregory H. Chu (2004). "Great geographers: Arthur H. Robinson.(Obituary)". In: Focus on Geography. December 22, 2004.
 Robinson, A. (1979). Geography and Cartography then and now. Annals of the Association of American Geographers, 69(1), 97–102.
 Robinson, Arthur H. (1997). "The President's Globe". Imago Mundi. 49: 143–152. doi:10.1080/03085699708592865. ISSN 0308-5694. JSTOR 1151340.
 Rhodes, Andrew (2020). "The Geographic President: How Franklin D. Roosevelt Used Maps to Make and Communicate Strategy". The Portolan Journal (Washington Map Society). 107.
 Current Biography Yearbook. (1996). Arthur H. Robinson, 467–471.
 Slocum, T.; McMaster, R.; Kessler, F.; & Howard, H. (2005) Thematic Cartography and Geographic Visualization (2nd Edition). Upper Saddle River, NJ: Pearson Prentice Hall. p. 24.
 Map library Archived April 4, 2006, at the Wayback Machine at the University of Wisconsin–Madison.
 Arthur H. Robinson and Randall D. Sale, Elements of Cartography (3rd Edition), New York: John Wiley and Sons, 1969, 250.
 Robinson, Arthur (1952). The Look of Maps. Madison: University of Wisconsin Press. pp. 62–63. ISBN 0-299-00950-5.
 Robinson, A. & Petchenik, B. (1976). The Nature of Maps. Chicago: The University of Chicago Press., p. 20.
 Map Projection: Interrupted Maps, progonos.com — A flattened global map has separated gores to limit the distortion involved.
 Robinson, A. (1974). "A New Map Projection: Its Development and Characteristics". In: International Yearbook of Cartography, pp. 145–155. pp. 147–148.
 Harris, Elizabeth (October 1987). "Review of The Look of Maps: An Examination of Cartographic Design by Arthur H. Robinson". Technology and Culture. 28 (4): 863–865. doi:10.2307/3105198.George G. Robertson

Article
Talk
Read
Edit
View history

Tools
From Wikipedia, the free encyclopedia
George G. Robertson is an American information visualization expert and senior researcher, Visualization and Interaction (VIBE) Research Group, Microsoft Research. With Stuart K. Card, Jock D. Mackinlay and others he invented a number of Information Visualization techniques.[1]

Biography
Robertson has worked as a faculty member of the Computer Science Department at Carnegie-Mellon University, a senior scientist at Thinking Machines, and a senior scientist at Bolt Beranek and Newman.[2] Before his current position at Microsoft he was principal scientist at Xerox PARC. Since 1996 he is a principal researcher in the Visualization and Interaction group at Microsoft Research.

He is an ACM Fellow and manages a project on 3D User Interfaces and Information Visualization. He is associate editor of the Journal of Information Visualization.

Robertson's research interests are "user interfaces, 3D interactive animation, 3D graphics, information visualization, intelligent information access, multimedia, and hypermedia",[2] see also: Connection Machine and Gender HCI

Publications
Articles, a selection:

1972. "XCRIBL - A Hardcopy Scan Line Graphics System for Document Generation". With Raj Reddy, W. Broadley, Lee D. Erman, R. Johnsson, J. Newcomer, and J. Wright. In: Inf. Process. Lett. 1(6): 246-251.
1978. "An Extensible File System for Hydra". With Guy T. Almes. In: ICSE 1978: 288-294.
1981. "Accent: A Communication Oriented Network Operating System Kernel". With: Richard F. Rashid, in: SOSP 1981: 64-75.
1987. "Parallel Implementation of Genetic Algorithms in a Classifier Rystem". in: Proceedings of the 2nd International Conference on Genetic Algorithms, July 1987: 140-147.
1988. "Population Size in classifier Systems". in: ML 1988: 142-152.
1989. "The cognitive coprocessor architecture for interactive user interfaces". With S. K. Card, and J. D. Mackinlay. In: Proceedings of the ACM SIGGRAPH Symposium on User Interface Software and Technology, pages 10–18. ACM Press, Nov 1989.
1991. "Cone Trees: Animated 3D Visualizations of Hierarchical Information". With Jock D. Mackinlay and Stuart K. Card. In: Robertson, Scott P., Olson, Gary M. and Olson, Judith S. (eds.) Proceedings of the ACM CHI 91 Human Factors in Computing Systems Conference April 28 - June 5, 1991, New Orleans, Louisiana. pp. 189–194.
1993. "Information Visualization Using 3D Interactive Animation". With Stuart K. Card, and Jock D. Mackinlay. In: Communications of the ACM, 36(4), April 1993. pp. 57–71.
1993. "The document lens". With J. D. Mackinlay. In: Proceedings of the ACM Symposium on User Interface Software and Technology. ACM Press, Nov 1993.
References
 Keynote Panel Information Visualization - Where are We and Where Do We Go From Here? Proceedings Infovis 1996. Retrieved 6 July 2008.
 George G. Robertson (2004). Short bio. Retrieved 6 July 2008.
External links
George G. Robertson Homepage at Microsoft research.
List of publications at www.informatik.uni-trier.de.
vte
Visualization of technical information
Fields	
Biological data visualizationChemical imagingCrime mappingData visualizationEducational visualizationFlow visualizationGeovisualizationInformation visualizationMathematical visualizationMedical imagingMolecular graphicsProduct visualizationScientific visualizationSoftware visualizationTechnical drawingUser interface designVisual cultureVolume visualization
Image types	
ChartDiagramEngineering drawingGraph of a functionIdeogramMapPhotographPictogramPlotSankey diagramSchematicSkeletal formulaStatistical graphicsTableTechnical drawingsTechnical illustration
People	
Pre-19th century	
Edmond HalleyCharles-René de FourcroyJoseph PriestleyGaspard Monge
19th century	
Charles DupinAdolphe QueteletAndré-Michel GuerryWilliam PlayfairAugust KekuléCharles Joseph MinardLuigi PerozzoFrancis Amasa WalkerJohn VennOliver ByrneMatthew SankeyCharles BoothGeorg von MayrJohn SnowFlorence NightingaleKarl Wilhelm PohlkeToussaint LouaFrancis Galton
Early 20th century	
Edward Walter MaunderOtto NeurathW. E. B. Du BoisHenry GanttArthur Lyon BowleyHoward G. FunkhouserJohn B. PeddleEjnar HertzsprungHenry Norris RussellMax O. LorenzFritz KahnHarry BeckErwin Raisz
Mid 20th century	
Jacques BertinRudolf ModleyArthur H. RobinsonJohn TukeyMary Eleanor SpearEdgar AndersonHoward T. Fisher
Late 20th century	
Borden DentNigel HolmesWilliam S. ClevelandGeorge G. RobertsonBruce H. McCormickCatherine PlaisantStuart CardPat HanrahanEdward TufteBen ShneidermanMichael FriendlyHoward WainerClifford A. PickoverLawrence J. RosenblumThomas A. DeFantiGeorge FurnasSheelagh CarpendaleCynthia BrewerMiriah MeyerJock D. MackinlayAlan MacEachrenDavid GoodsellMichael MaltzLeland WilkinsonAlfred Inselberg
Early 21st century	
Ben FryHans RoslingChristopher R. JohnsonDavid McCandlessMauro MartinoJohn MaedaTamara MunznerJeffrey HeerGordon KindlmannHanspeter PfisterManuel LimaAaron KoblinMartin KrzywinskiBang WongJessica HullmanHadley WickhamPolo ChauFernanda ViégasMartin WattenbergClaudio SilvaAde OlufekoMoritz Stefaner
Related topics	
CartographyChartjunkComputer graphics in computer scienceCPK coloringGraph drawingGraphic designGraphic organizerImaging scienceInformation graphicsInformation scienceMisleading graphNeuroimagingPatent drawingScientific modellingSpatial analysisVisual analyticsVisual perceptionVolume cartographyVolume renderingInformation art
Authority control: Academics Edit this at Wikidata	
Association for Computing MachineryDBLP
Categories: Living peopleCarnegie Mellon University alumniHuman–computer interaction researchersInformation visualization expertsScientists at PARC (company)Jacques Bertin

Article
Talk
Read
Edit
View history

Tools
From Wikipedia, the free encyclopedia
Jacques Bertin
Jacques Bertin 71.jpg
Born	27 July 1918
Maisons-Laffitte, Yvelines
Died	3 May 2010 (aged 91)[1]
Paris, France
Occupation(s)	Cartographer, Theorist
Jacques Bertin (27 July 1918 – 3 May 2010[1]) was a French cartographer and theorist, known from his book Sémiologie Graphique (Semiology of Graphics), published in 1967. This monumental work, based on his experience as a cartographer and geographer, represents the first and widest intent to provide a theoretical foundation to Information Visualization,[2] with his most lasting contribution being his set of visual variables that can be used to construct map symbols and other graphical techniques one of then being the Bertin Projection, an innovative map projection type.

Biography
Jacques Bertin was born in 1918 in Maisons-Laffitte, Yvelines. When he was 10, he received the first prize of cartography at primary school. He never had problems with drawing, and pursued interests including architecture, the teaching of drawing and cartography.[2] Finally he ended up studying geography and cartography at the Sorbonne.

He became founder and director of the Cartographic Laboratory of the École pratique des hautes études (EPHE) in 1954 and director of studies (directeur d'études) in 1957. In 1967 he became professor of the Sorbonne,[3] and in 1974 he became director of studies and director of the Geographical Laboratory of the École des hautes études en sciences sociales (EHESS), which is part of the École pratique des hautes études (EPHE, VIe Section).[4] Later in the 1970s he became head of research at the Centre national de la recherche scientifique (CNRS).[5]

In 1993 Bertin received the "Mercator-Medaille der Deutschen Gesellschaft für Kartographie"[6] and in 1999 the Carl Mannerfelt Gold Medal from the International Cartographic Association.

Bertin died in Paris on 3 May 2010.[1]

Publications
Jacques Bertin has published numerous scientific maps, papers and articles on map making, semiology, graphical information and graphic processing.

1967. Sémiologie Graphique. Les diagrammes, les réseaux, les cartes. With Marc Barbut [et al.]. Paris : Gauthier-Villars. (Translation 1983. Semiology of Graphics by William J. Berg.)
1969. Etude et réalisation d'un dispositif de goniométrie et d'observation de formes d'onde, en large bande.
1976. Experimental and Theoretical Aspects of Induced Polarization. 2 vol. With J. Loes. Berlin : Gebruder. Borntraeger.
1977. Graphique et le traitement graphique de l'information. With Serge Bonin [et al.].
1977. La graphique et le traitement graphique de l'information. Paris : Flammarion, 1977, 273 p. (translation 1981. Graphics and graphic information-processing by William J. Berg and Paul Scott).
1992. Harper atlas of world history. with Pierre Vidal-Naquet. N.Y. : Harper Collins.
1997. Atlas historique universel. Panorama de l'histoire du monde. With J. Devisse, D. Lavallée and J. Népote. Genève : Éd. Minerve, 180 p.
2006. Nuovo atlante storico Zanichelli / sotto la direzione di Pierre Vidal-Naquet ; direzione della cartografia.
References
 "UW Press - : Semiology of Graphics: Diagrams, Networks, Maps, Jacques Bertin, Translated from the French by William J. Berg". Archived from the original on 13 June 2010. Retrieved 23 July 2010.
 Juan C. Dürsteler (2000-08). Interview with Jacques Bertin. Retrieved 23 June 2008.
 David P. Bickmore (1969). "Sémiologie Graphique: les diagrammes, les réseaux, les cartes by Jacques Bertin." In: The Geographical Journal, Vol. 135, No. 1 (Mar., 1969), pp. 144–146.
 David Ruxton Fraser Taylor (1985). "Education and Training in Contemporary Cartography". p. viii
 Ron Bergquist (2006). "Graphic Portrayal of Information"[permanent dead link]. Presentation at ils.unc.edu. Retrieved 1 July 2008.
 Satzung der Deutschen Gesellschaft für Kartographie e.V. Archived 26 February 2007 at the Wayback Machine. Retrieved 1 July 2008.
External links

Wikiquote has quotations related to Jacques Bertin.
Interview with Jacques Bertin
Jacques Bertin's Semiology of Graphics
Graphische Variablen im UMN MapServer (in German)